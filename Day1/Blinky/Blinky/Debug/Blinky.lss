
Blinky.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000040a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000038  00000000  00000000  0000045e  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000042  00000000  00000000  00000496  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000266  00000000  00000000  000004d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000012e  00000000  00000000  0000073e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000023c  00000000  00000000  0000086c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000050  00000000  00000000  00000aa8  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000013c  00000000  00000000  00000af8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000001dc  00000000  00000000  00000c34  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000030  00000000  00000000  00000e10  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	96 d0       	rcall	.+300    	; 0x160 <main>
  34:	e8 c1       	rjmp	.+976    	; 0x406 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <_Z7pinModeRVhb>:
#define LOW 0

typedef volatile unsigned char vuc;


void pinMode(vuc &DDR, bool mode)
  38:	fc 01       	movw	r30, r24
{
	if (mode){
  3a:	66 23       	and	r22, r22
  3c:	19 f0       	breq	.+6      	; 0x44 <__SREG__+0x5>
		DDR = 0xFF;
  3e:	8f ef       	ldi	r24, 0xFF	; 255
  40:	80 83       	st	Z, r24
  42:	08 95       	ret
		return;
	}
	DDR = 0x00;
  44:	10 82       	st	Z, r1
  46:	08 95       	ret

00000048 <_Z12digitalWriteRVhb>:
}

void digitalWrite(vuc &PORT, bool mode)
  48:	fc 01       	movw	r30, r24
{
	if (mode){
  4a:	66 23       	and	r22, r22
  4c:	19 f0       	breq	.+6      	; 0x54 <_Z12digitalWriteRVhb+0xc>
		PORT = 0xFF;
  4e:	8f ef       	ldi	r24, 0xFF	; 255
  50:	80 83       	st	Z, r24
  52:	08 95       	ret
		return;
	}
	PORT = 0x00;
  54:	10 82       	st	Z, r1
  56:	08 95       	ret

00000058 <_Z5blinkRVhj>:
}

void blink(vuc &pin, unsigned int delay_time = 100)
  58:	af 92       	push	r10
  5a:	bf 92       	push	r11
  5c:	cf 92       	push	r12
  5e:	df 92       	push	r13
  60:	ef 92       	push	r14
  62:	ff 92       	push	r15
  64:	0f 93       	push	r16
  66:	1f 93       	push	r17
  68:	cf 93       	push	r28
  6a:	df 93       	push	r29
  6c:	ec 01       	movw	r28, r24
  6e:	7b 01       	movw	r14, r22
{
	digitalWrite(pin, HIGH);
  70:	61 e0       	ldi	r22, 0x01	; 1
  72:	ea df       	rcall	.-44     	; 0x48 <_Z12digitalWriteRVhb>
	_delay_ms(delay_time);
  74:	00 e0       	ldi	r16, 0x00	; 0
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	c8 01       	movw	r24, r16
  7a:	b7 01       	movw	r22, r14
  7c:	ab d0       	rcall	.+342    	; 0x1d4 <__floatunsisf>
  7e:	5b 01       	movw	r10, r22
  80:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
  82:	20 e0       	ldi	r18, 0x00	; 0
  84:	30 e0       	ldi	r19, 0x00	; 0
  86:	4a e7       	ldi	r20, 0x7A	; 122
  88:	55 e4       	ldi	r21, 0x45	; 69
  8a:	32 d1       	rcall	.+612    	; 0x2f0 <__mulsf3>
  8c:	7b 01       	movw	r14, r22
  8e:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
  90:	20 e0       	ldi	r18, 0x00	; 0
  92:	30 e0       	ldi	r19, 0x00	; 0
  94:	40 e8       	ldi	r20, 0x80	; 128
  96:	5f e3       	ldi	r21, 0x3F	; 63
  98:	6d d0       	rcall	.+218    	; 0x174 <__cmpsf2>
  9a:	88 23       	and	r24, r24
  9c:	1c f4       	brge	.+6      	; 0xa4 <_Z5blinkRVhj+0x4c>
  9e:	61 e0       	ldi	r22, 0x01	; 1
  a0:	70 e0       	ldi	r23, 0x00	; 0
  a2:	1f c0       	rjmp	.+62     	; 0xe2 <_Z5blinkRVhj+0x8a>
		__ticks = 1;
	else if (__tmp > 65535)
  a4:	c8 01       	movw	r24, r16
  a6:	b7 01       	movw	r22, r14
  a8:	20 e0       	ldi	r18, 0x00	; 0
  aa:	3f ef       	ldi	r19, 0xFF	; 255
  ac:	4f e7       	ldi	r20, 0x7F	; 127
  ae:	57 e4       	ldi	r21, 0x47	; 71
  b0:	1b d1       	rcall	.+566    	; 0x2e8 <__gesf2>
  b2:	18 16       	cp	r1, r24
  b4:	9c f4       	brge	.+38     	; 0xdc <_Z5blinkRVhj+0x84>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
  b6:	c6 01       	movw	r24, r12
  b8:	b5 01       	movw	r22, r10
  ba:	20 e0       	ldi	r18, 0x00	; 0
  bc:	30 e0       	ldi	r19, 0x00	; 0
  be:	40 e2       	ldi	r20, 0x20	; 32
  c0:	51 e4       	ldi	r21, 0x41	; 65
  c2:	16 d1       	rcall	.+556    	; 0x2f0 <__mulsf3>
  c4:	5b d0       	rcall	.+182    	; 0x17c <__fixunssfsi>
  c6:	cb 01       	movw	r24, r22
		while(__ticks)
  c8:	67 2b       	or	r22, r23
  ca:	71 f0       	breq	.+28     	; 0xe8 <_Z5blinkRVhj+0x90>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
  cc:	20 e9       	ldi	r18, 0x90	; 144
  ce:	31 e0       	ldi	r19, 0x01	; 1
  d0:	f9 01       	movw	r30, r18
  d2:	31 97       	sbiw	r30, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <_Z5blinkRVhj+0x7a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  d6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  d8:	d9 f7       	brne	.-10     	; 0xd0 <_Z5blinkRVhj+0x78>
  da:	06 c0       	rjmp	.+12     	; 0xe8 <_Z5blinkRVhj+0x90>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
  dc:	c8 01       	movw	r24, r16
  de:	b7 01       	movw	r22, r14
  e0:	4d d0       	rcall	.+154    	; 0x17c <__fixunssfsi>
  e2:	cb 01       	movw	r24, r22
  e4:	01 97       	sbiw	r24, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <_Z5blinkRVhj+0x8c>
	digitalWrite(pin, LOW);
  e8:	ce 01       	movw	r24, r28
  ea:	60 e0       	ldi	r22, 0x00	; 0
  ec:	ad df       	rcall	.-166    	; 0x48 <_Z12digitalWriteRVhb>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
  ee:	c8 01       	movw	r24, r16
  f0:	b7 01       	movw	r22, r14
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	40 e8       	ldi	r20, 0x80	; 128
  f8:	5f e3       	ldi	r21, 0x3F	; 63
  fa:	3c d0       	rcall	.+120    	; 0x174 <__cmpsf2>
  fc:	88 23       	and	r24, r24
  fe:	1c f4       	brge	.+6      	; 0x106 <_Z5blinkRVhj+0xae>
 100:	61 e0       	ldi	r22, 0x01	; 1
 102:	70 e0       	ldi	r23, 0x00	; 0
 104:	1f c0       	rjmp	.+62     	; 0x144 <_Z5blinkRVhj+0xec>
		__ticks = 1;
	else if (__tmp > 65535)
 106:	c8 01       	movw	r24, r16
 108:	b7 01       	movw	r22, r14
 10a:	20 e0       	ldi	r18, 0x00	; 0
 10c:	3f ef       	ldi	r19, 0xFF	; 255
 10e:	4f e7       	ldi	r20, 0x7F	; 127
 110:	57 e4       	ldi	r21, 0x47	; 71
 112:	ea d0       	rcall	.+468    	; 0x2e8 <__gesf2>
 114:	18 16       	cp	r1, r24
 116:	9c f4       	brge	.+38     	; 0x13e <_Z5blinkRVhj+0xe6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 118:	c6 01       	movw	r24, r12
 11a:	b5 01       	movw	r22, r10
 11c:	20 e0       	ldi	r18, 0x00	; 0
 11e:	30 e0       	ldi	r19, 0x00	; 0
 120:	40 e2       	ldi	r20, 0x20	; 32
 122:	51 e4       	ldi	r21, 0x41	; 65
 124:	e5 d0       	rcall	.+458    	; 0x2f0 <__mulsf3>
 126:	2a d0       	rcall	.+84     	; 0x17c <__fixunssfsi>
 128:	cb 01       	movw	r24, r22
		while(__ticks)
 12a:	67 2b       	or	r22, r23
 12c:	71 f0       	breq	.+28     	; 0x14a <_Z5blinkRVhj+0xf2>
 12e:	20 e9       	ldi	r18, 0x90	; 144
 130:	31 e0       	ldi	r19, 0x01	; 1
 132:	f9 01       	movw	r30, r18
 134:	31 97       	sbiw	r30, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <_Z5blinkRVhj+0xdc>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 138:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 13a:	d9 f7       	brne	.-10     	; 0x132 <_Z5blinkRVhj+0xda>
 13c:	06 c0       	rjmp	.+12     	; 0x14a <_Z5blinkRVhj+0xf2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 13e:	c8 01       	movw	r24, r16
 140:	b7 01       	movw	r22, r14
 142:	1c d0       	rcall	.+56     	; 0x17c <__fixunssfsi>
 144:	cb 01       	movw	r24, r22
 146:	01 97       	sbiw	r24, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <_Z5blinkRVhj+0xee>
	_delay_ms(delay_time);
}
 14a:	df 91       	pop	r29
 14c:	cf 91       	pop	r28
 14e:	1f 91       	pop	r17
 150:	0f 91       	pop	r16
 152:	ff 90       	pop	r15
 154:	ef 90       	pop	r14
 156:	df 90       	pop	r13
 158:	cf 90       	pop	r12
 15a:	bf 90       	pop	r11
 15c:	af 90       	pop	r10
 15e:	08 95       	ret

00000160 <main>:

int main(void)
{
	pinMode(DDRD, true);
 160:	81 e3       	ldi	r24, 0x31	; 49
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	61 e0       	ldi	r22, 0x01	; 1
 166:	68 df       	rcall	.-304    	; 0x38 <_Z7pinModeRVhb>
	
	loop {
		blink(PORTD);
 168:	82 e3       	ldi	r24, 0x32	; 50
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	64 e6       	ldi	r22, 0x64	; 100
 16e:	70 e0       	ldi	r23, 0x00	; 0
 170:	73 df       	rcall	.-282    	; 0x58 <_Z5blinkRVhj>
 172:	fa cf       	rjmp	.-12     	; 0x168 <main+0x8>

00000174 <__cmpsf2>:
 174:	6c d0       	rcall	.+216    	; 0x24e <__fp_cmp>
 176:	08 f4       	brcc	.+2      	; 0x17a <__cmpsf2+0x6>
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	08 95       	ret

0000017c <__fixunssfsi>:
 17c:	94 d0       	rcall	.+296    	; 0x2a6 <__fp_splitA>
 17e:	88 f0       	brcs	.+34     	; 0x1a2 <__fixunssfsi+0x26>
 180:	9f 57       	subi	r25, 0x7F	; 127
 182:	90 f0       	brcs	.+36     	; 0x1a8 <__fixunssfsi+0x2c>
 184:	b9 2f       	mov	r27, r25
 186:	99 27       	eor	r25, r25
 188:	b7 51       	subi	r27, 0x17	; 23
 18a:	a0 f0       	brcs	.+40     	; 0x1b4 <__fixunssfsi+0x38>
 18c:	d1 f0       	breq	.+52     	; 0x1c2 <__fixunssfsi+0x46>
 18e:	66 0f       	add	r22, r22
 190:	77 1f       	adc	r23, r23
 192:	88 1f       	adc	r24, r24
 194:	99 1f       	adc	r25, r25
 196:	1a f0       	brmi	.+6      	; 0x19e <__fixunssfsi+0x22>
 198:	ba 95       	dec	r27
 19a:	c9 f7       	brne	.-14     	; 0x18e <__fixunssfsi+0x12>
 19c:	12 c0       	rjmp	.+36     	; 0x1c2 <__fixunssfsi+0x46>
 19e:	b1 30       	cpi	r27, 0x01	; 1
 1a0:	81 f0       	breq	.+32     	; 0x1c2 <__fixunssfsi+0x46>
 1a2:	9b d0       	rcall	.+310    	; 0x2da <__fp_zero>
 1a4:	b1 e0       	ldi	r27, 0x01	; 1
 1a6:	08 95       	ret
 1a8:	98 c0       	rjmp	.+304    	; 0x2da <__fp_zero>
 1aa:	67 2f       	mov	r22, r23
 1ac:	78 2f       	mov	r23, r24
 1ae:	88 27       	eor	r24, r24
 1b0:	b8 5f       	subi	r27, 0xF8	; 248
 1b2:	39 f0       	breq	.+14     	; 0x1c2 <__fixunssfsi+0x46>
 1b4:	b9 3f       	cpi	r27, 0xF9	; 249
 1b6:	cc f3       	brlt	.-14     	; 0x1aa <__fixunssfsi+0x2e>
 1b8:	86 95       	lsr	r24
 1ba:	77 95       	ror	r23
 1bc:	67 95       	ror	r22
 1be:	b3 95       	inc	r27
 1c0:	d9 f7       	brne	.-10     	; 0x1b8 <__fixunssfsi+0x3c>
 1c2:	3e f4       	brtc	.+14     	; 0x1d2 <__fixunssfsi+0x56>
 1c4:	90 95       	com	r25
 1c6:	80 95       	com	r24
 1c8:	70 95       	com	r23
 1ca:	61 95       	neg	r22
 1cc:	7f 4f       	sbci	r23, 0xFF	; 255
 1ce:	8f 4f       	sbci	r24, 0xFF	; 255
 1d0:	9f 4f       	sbci	r25, 0xFF	; 255
 1d2:	08 95       	ret

000001d4 <__floatunsisf>:
 1d4:	e8 94       	clt
 1d6:	09 c0       	rjmp	.+18     	; 0x1ea <__floatsisf+0x12>

000001d8 <__floatsisf>:
 1d8:	97 fb       	bst	r25, 7
 1da:	3e f4       	brtc	.+14     	; 0x1ea <__floatsisf+0x12>
 1dc:	90 95       	com	r25
 1de:	80 95       	com	r24
 1e0:	70 95       	com	r23
 1e2:	61 95       	neg	r22
 1e4:	7f 4f       	sbci	r23, 0xFF	; 255
 1e6:	8f 4f       	sbci	r24, 0xFF	; 255
 1e8:	9f 4f       	sbci	r25, 0xFF	; 255
 1ea:	99 23       	and	r25, r25
 1ec:	a9 f0       	breq	.+42     	; 0x218 <__floatsisf+0x40>
 1ee:	f9 2f       	mov	r31, r25
 1f0:	96 e9       	ldi	r25, 0x96	; 150
 1f2:	bb 27       	eor	r27, r27
 1f4:	93 95       	inc	r25
 1f6:	f6 95       	lsr	r31
 1f8:	87 95       	ror	r24
 1fa:	77 95       	ror	r23
 1fc:	67 95       	ror	r22
 1fe:	b7 95       	ror	r27
 200:	f1 11       	cpse	r31, r1
 202:	f8 cf       	rjmp	.-16     	; 0x1f4 <__floatsisf+0x1c>
 204:	fa f4       	brpl	.+62     	; 0x244 <__floatsisf+0x6c>
 206:	bb 0f       	add	r27, r27
 208:	11 f4       	brne	.+4      	; 0x20e <__floatsisf+0x36>
 20a:	60 ff       	sbrs	r22, 0
 20c:	1b c0       	rjmp	.+54     	; 0x244 <__floatsisf+0x6c>
 20e:	6f 5f       	subi	r22, 0xFF	; 255
 210:	7f 4f       	sbci	r23, 0xFF	; 255
 212:	8f 4f       	sbci	r24, 0xFF	; 255
 214:	9f 4f       	sbci	r25, 0xFF	; 255
 216:	16 c0       	rjmp	.+44     	; 0x244 <__floatsisf+0x6c>
 218:	88 23       	and	r24, r24
 21a:	11 f0       	breq	.+4      	; 0x220 <__floatsisf+0x48>
 21c:	96 e9       	ldi	r25, 0x96	; 150
 21e:	11 c0       	rjmp	.+34     	; 0x242 <__floatsisf+0x6a>
 220:	77 23       	and	r23, r23
 222:	21 f0       	breq	.+8      	; 0x22c <__floatsisf+0x54>
 224:	9e e8       	ldi	r25, 0x8E	; 142
 226:	87 2f       	mov	r24, r23
 228:	76 2f       	mov	r23, r22
 22a:	05 c0       	rjmp	.+10     	; 0x236 <__floatsisf+0x5e>
 22c:	66 23       	and	r22, r22
 22e:	71 f0       	breq	.+28     	; 0x24c <__floatsisf+0x74>
 230:	96 e8       	ldi	r25, 0x86	; 134
 232:	86 2f       	mov	r24, r22
 234:	70 e0       	ldi	r23, 0x00	; 0
 236:	60 e0       	ldi	r22, 0x00	; 0
 238:	2a f0       	brmi	.+10     	; 0x244 <__floatsisf+0x6c>
 23a:	9a 95       	dec	r25
 23c:	66 0f       	add	r22, r22
 23e:	77 1f       	adc	r23, r23
 240:	88 1f       	adc	r24, r24
 242:	da f7       	brpl	.-10     	; 0x23a <__floatsisf+0x62>
 244:	88 0f       	add	r24, r24
 246:	96 95       	lsr	r25
 248:	87 95       	ror	r24
 24a:	97 f9       	bld	r25, 7
 24c:	08 95       	ret

0000024e <__fp_cmp>:
 24e:	99 0f       	add	r25, r25
 250:	00 08       	sbc	r0, r0
 252:	55 0f       	add	r21, r21
 254:	aa 0b       	sbc	r26, r26
 256:	e0 e8       	ldi	r30, 0x80	; 128
 258:	fe ef       	ldi	r31, 0xFE	; 254
 25a:	16 16       	cp	r1, r22
 25c:	17 06       	cpc	r1, r23
 25e:	e8 07       	cpc	r30, r24
 260:	f9 07       	cpc	r31, r25
 262:	c0 f0       	brcs	.+48     	; 0x294 <__fp_cmp+0x46>
 264:	12 16       	cp	r1, r18
 266:	13 06       	cpc	r1, r19
 268:	e4 07       	cpc	r30, r20
 26a:	f5 07       	cpc	r31, r21
 26c:	98 f0       	brcs	.+38     	; 0x294 <__fp_cmp+0x46>
 26e:	62 1b       	sub	r22, r18
 270:	73 0b       	sbc	r23, r19
 272:	84 0b       	sbc	r24, r20
 274:	95 0b       	sbc	r25, r21
 276:	39 f4       	brne	.+14     	; 0x286 <__fp_cmp+0x38>
 278:	0a 26       	eor	r0, r26
 27a:	61 f0       	breq	.+24     	; 0x294 <__fp_cmp+0x46>
 27c:	23 2b       	or	r18, r19
 27e:	24 2b       	or	r18, r20
 280:	25 2b       	or	r18, r21
 282:	21 f4       	brne	.+8      	; 0x28c <__fp_cmp+0x3e>
 284:	08 95       	ret
 286:	0a 26       	eor	r0, r26
 288:	09 f4       	brne	.+2      	; 0x28c <__fp_cmp+0x3e>
 28a:	a1 40       	sbci	r26, 0x01	; 1
 28c:	a6 95       	lsr	r26
 28e:	8f ef       	ldi	r24, 0xFF	; 255
 290:	81 1d       	adc	r24, r1
 292:	81 1d       	adc	r24, r1
 294:	08 95       	ret

00000296 <__fp_split3>:
 296:	57 fd       	sbrc	r21, 7
 298:	90 58       	subi	r25, 0x80	; 128
 29a:	44 0f       	add	r20, r20
 29c:	55 1f       	adc	r21, r21
 29e:	59 f0       	breq	.+22     	; 0x2b6 <__fp_splitA+0x10>
 2a0:	5f 3f       	cpi	r21, 0xFF	; 255
 2a2:	71 f0       	breq	.+28     	; 0x2c0 <__fp_splitA+0x1a>
 2a4:	47 95       	ror	r20

000002a6 <__fp_splitA>:
 2a6:	88 0f       	add	r24, r24
 2a8:	97 fb       	bst	r25, 7
 2aa:	99 1f       	adc	r25, r25
 2ac:	61 f0       	breq	.+24     	; 0x2c6 <__fp_splitA+0x20>
 2ae:	9f 3f       	cpi	r25, 0xFF	; 255
 2b0:	79 f0       	breq	.+30     	; 0x2d0 <__fp_splitA+0x2a>
 2b2:	87 95       	ror	r24
 2b4:	08 95       	ret
 2b6:	12 16       	cp	r1, r18
 2b8:	13 06       	cpc	r1, r19
 2ba:	14 06       	cpc	r1, r20
 2bc:	55 1f       	adc	r21, r21
 2be:	f2 cf       	rjmp	.-28     	; 0x2a4 <__fp_split3+0xe>
 2c0:	46 95       	lsr	r20
 2c2:	f1 df       	rcall	.-30     	; 0x2a6 <__fp_splitA>
 2c4:	08 c0       	rjmp	.+16     	; 0x2d6 <__fp_splitA+0x30>
 2c6:	16 16       	cp	r1, r22
 2c8:	17 06       	cpc	r1, r23
 2ca:	18 06       	cpc	r1, r24
 2cc:	99 1f       	adc	r25, r25
 2ce:	f1 cf       	rjmp	.-30     	; 0x2b2 <__fp_splitA+0xc>
 2d0:	86 95       	lsr	r24
 2d2:	71 05       	cpc	r23, r1
 2d4:	61 05       	cpc	r22, r1
 2d6:	08 94       	sec
 2d8:	08 95       	ret

000002da <__fp_zero>:
 2da:	e8 94       	clt

000002dc <__fp_szero>:
 2dc:	bb 27       	eor	r27, r27
 2de:	66 27       	eor	r22, r22
 2e0:	77 27       	eor	r23, r23
 2e2:	cb 01       	movw	r24, r22
 2e4:	97 f9       	bld	r25, 7
 2e6:	08 95       	ret

000002e8 <__gesf2>:
 2e8:	b2 df       	rcall	.-156    	; 0x24e <__fp_cmp>
 2ea:	08 f4       	brcc	.+2      	; 0x2ee <__gesf2+0x6>
 2ec:	8f ef       	ldi	r24, 0xFF	; 255
 2ee:	08 95       	ret

000002f0 <__mulsf3>:
 2f0:	0b d0       	rcall	.+22     	; 0x308 <__mulsf3x>
 2f2:	78 c0       	rjmp	.+240    	; 0x3e4 <__fp_round>
 2f4:	69 d0       	rcall	.+210    	; 0x3c8 <__fp_pscA>
 2f6:	28 f0       	brcs	.+10     	; 0x302 <__mulsf3+0x12>
 2f8:	6e d0       	rcall	.+220    	; 0x3d6 <__fp_pscB>
 2fa:	18 f0       	brcs	.+6      	; 0x302 <__mulsf3+0x12>
 2fc:	95 23       	and	r25, r21
 2fe:	09 f0       	breq	.+2      	; 0x302 <__mulsf3+0x12>
 300:	5a c0       	rjmp	.+180    	; 0x3b6 <__fp_inf>
 302:	5f c0       	rjmp	.+190    	; 0x3c2 <__fp_nan>
 304:	11 24       	eor	r1, r1
 306:	ea cf       	rjmp	.-44     	; 0x2dc <__fp_szero>

00000308 <__mulsf3x>:
 308:	c6 df       	rcall	.-116    	; 0x296 <__fp_split3>
 30a:	a0 f3       	brcs	.-24     	; 0x2f4 <__mulsf3+0x4>

0000030c <__mulsf3_pse>:
 30c:	95 9f       	mul	r25, r21
 30e:	d1 f3       	breq	.-12     	; 0x304 <__mulsf3+0x14>
 310:	95 0f       	add	r25, r21
 312:	50 e0       	ldi	r21, 0x00	; 0
 314:	55 1f       	adc	r21, r21
 316:	62 9f       	mul	r22, r18
 318:	f0 01       	movw	r30, r0
 31a:	72 9f       	mul	r23, r18
 31c:	bb 27       	eor	r27, r27
 31e:	f0 0d       	add	r31, r0
 320:	b1 1d       	adc	r27, r1
 322:	63 9f       	mul	r22, r19
 324:	aa 27       	eor	r26, r26
 326:	f0 0d       	add	r31, r0
 328:	b1 1d       	adc	r27, r1
 32a:	aa 1f       	adc	r26, r26
 32c:	64 9f       	mul	r22, r20
 32e:	66 27       	eor	r22, r22
 330:	b0 0d       	add	r27, r0
 332:	a1 1d       	adc	r26, r1
 334:	66 1f       	adc	r22, r22
 336:	82 9f       	mul	r24, r18
 338:	22 27       	eor	r18, r18
 33a:	b0 0d       	add	r27, r0
 33c:	a1 1d       	adc	r26, r1
 33e:	62 1f       	adc	r22, r18
 340:	73 9f       	mul	r23, r19
 342:	b0 0d       	add	r27, r0
 344:	a1 1d       	adc	r26, r1
 346:	62 1f       	adc	r22, r18
 348:	83 9f       	mul	r24, r19
 34a:	a0 0d       	add	r26, r0
 34c:	61 1d       	adc	r22, r1
 34e:	22 1f       	adc	r18, r18
 350:	74 9f       	mul	r23, r20
 352:	33 27       	eor	r19, r19
 354:	a0 0d       	add	r26, r0
 356:	61 1d       	adc	r22, r1
 358:	23 1f       	adc	r18, r19
 35a:	84 9f       	mul	r24, r20
 35c:	60 0d       	add	r22, r0
 35e:	21 1d       	adc	r18, r1
 360:	82 2f       	mov	r24, r18
 362:	76 2f       	mov	r23, r22
 364:	6a 2f       	mov	r22, r26
 366:	11 24       	eor	r1, r1
 368:	9f 57       	subi	r25, 0x7F	; 127
 36a:	50 40       	sbci	r21, 0x00	; 0
 36c:	8a f0       	brmi	.+34     	; 0x390 <__mulsf3_pse+0x84>
 36e:	e1 f0       	breq	.+56     	; 0x3a8 <__mulsf3_pse+0x9c>
 370:	88 23       	and	r24, r24
 372:	4a f0       	brmi	.+18     	; 0x386 <__mulsf3_pse+0x7a>
 374:	ee 0f       	add	r30, r30
 376:	ff 1f       	adc	r31, r31
 378:	bb 1f       	adc	r27, r27
 37a:	66 1f       	adc	r22, r22
 37c:	77 1f       	adc	r23, r23
 37e:	88 1f       	adc	r24, r24
 380:	91 50       	subi	r25, 0x01	; 1
 382:	50 40       	sbci	r21, 0x00	; 0
 384:	a9 f7       	brne	.-22     	; 0x370 <__mulsf3_pse+0x64>
 386:	9e 3f       	cpi	r25, 0xFE	; 254
 388:	51 05       	cpc	r21, r1
 38a:	70 f0       	brcs	.+28     	; 0x3a8 <__mulsf3_pse+0x9c>
 38c:	14 c0       	rjmp	.+40     	; 0x3b6 <__fp_inf>
 38e:	a6 cf       	rjmp	.-180    	; 0x2dc <__fp_szero>
 390:	5f 3f       	cpi	r21, 0xFF	; 255
 392:	ec f3       	brlt	.-6      	; 0x38e <__mulsf3_pse+0x82>
 394:	98 3e       	cpi	r25, 0xE8	; 232
 396:	dc f3       	brlt	.-10     	; 0x38e <__mulsf3_pse+0x82>
 398:	86 95       	lsr	r24
 39a:	77 95       	ror	r23
 39c:	67 95       	ror	r22
 39e:	b7 95       	ror	r27
 3a0:	f7 95       	ror	r31
 3a2:	e7 95       	ror	r30
 3a4:	9f 5f       	subi	r25, 0xFF	; 255
 3a6:	c1 f7       	brne	.-16     	; 0x398 <__mulsf3_pse+0x8c>
 3a8:	fe 2b       	or	r31, r30
 3aa:	88 0f       	add	r24, r24
 3ac:	91 1d       	adc	r25, r1
 3ae:	96 95       	lsr	r25
 3b0:	87 95       	ror	r24
 3b2:	97 f9       	bld	r25, 7
 3b4:	08 95       	ret

000003b6 <__fp_inf>:
 3b6:	97 f9       	bld	r25, 7
 3b8:	9f 67       	ori	r25, 0x7F	; 127
 3ba:	80 e8       	ldi	r24, 0x80	; 128
 3bc:	70 e0       	ldi	r23, 0x00	; 0
 3be:	60 e0       	ldi	r22, 0x00	; 0
 3c0:	08 95       	ret

000003c2 <__fp_nan>:
 3c2:	9f ef       	ldi	r25, 0xFF	; 255
 3c4:	80 ec       	ldi	r24, 0xC0	; 192
 3c6:	08 95       	ret

000003c8 <__fp_pscA>:
 3c8:	00 24       	eor	r0, r0
 3ca:	0a 94       	dec	r0
 3cc:	16 16       	cp	r1, r22
 3ce:	17 06       	cpc	r1, r23
 3d0:	18 06       	cpc	r1, r24
 3d2:	09 06       	cpc	r0, r25
 3d4:	08 95       	ret

000003d6 <__fp_pscB>:
 3d6:	00 24       	eor	r0, r0
 3d8:	0a 94       	dec	r0
 3da:	12 16       	cp	r1, r18
 3dc:	13 06       	cpc	r1, r19
 3de:	14 06       	cpc	r1, r20
 3e0:	05 06       	cpc	r0, r21
 3e2:	08 95       	ret

000003e4 <__fp_round>:
 3e4:	09 2e       	mov	r0, r25
 3e6:	03 94       	inc	r0
 3e8:	00 0c       	add	r0, r0
 3ea:	11 f4       	brne	.+4      	; 0x3f0 <__fp_round+0xc>
 3ec:	88 23       	and	r24, r24
 3ee:	52 f0       	brmi	.+20     	; 0x404 <__fp_round+0x20>
 3f0:	bb 0f       	add	r27, r27
 3f2:	40 f4       	brcc	.+16     	; 0x404 <__fp_round+0x20>
 3f4:	bf 2b       	or	r27, r31
 3f6:	11 f4       	brne	.+4      	; 0x3fc <__fp_round+0x18>
 3f8:	60 ff       	sbrs	r22, 0
 3fa:	04 c0       	rjmp	.+8      	; 0x404 <__fp_round+0x20>
 3fc:	6f 5f       	subi	r22, 0xFF	; 255
 3fe:	7f 4f       	sbci	r23, 0xFF	; 255
 400:	8f 4f       	sbci	r24, 0xFF	; 255
 402:	9f 4f       	sbci	r25, 0xFF	; 255
 404:	08 95       	ret

00000406 <_exit>:
 406:	f8 94       	cli

00000408 <__stop_program>:
 408:	ff cf       	rjmp	.-2      	; 0x408 <__stop_program>
