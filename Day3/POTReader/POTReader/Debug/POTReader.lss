
POTReader.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a22  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000a22  00000ab6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  0080006a  0080006a  00000ac0  2**0
                  ALLOC
  3 .debug_aranges 00000068  00000000  00000000  00000ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000000c6  00000000  00000000  00000b28  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003ba  00000000  00000000  00000bee  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001e3  00000000  00000000  00000fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003c3  00000000  00000000  0000118b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b0  00000000  00000000  00001550  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002b6  00000000  00000000  00001600  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001fc  00000000  00000000  000018b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00001ab2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
	string_with_flags[length + 2] = '\0';
	USART_Transmit_String(string_with_flags);
	free (string_with_flags); //Free the memory
}

unsigned char USART_Receive(void)
   0:	13 c0       	rjmp	.+38     	; 0x28 <__ctors_end>
   2:	37 c0       	rjmp	.+110    	; 0x72 <__bad_interrupt>
   4:	36 c0       	rjmp	.+108    	; 0x72 <__bad_interrupt>
   6:	35 c0       	rjmp	.+106    	; 0x72 <__bad_interrupt>
   8:	34 c0       	rjmp	.+104    	; 0x72 <__bad_interrupt>
   a:	33 c0       	rjmp	.+102    	; 0x72 <__bad_interrupt>
   c:	32 c0       	rjmp	.+100    	; 0x72 <__bad_interrupt>
   e:	31 c0       	rjmp	.+98     	; 0x72 <__bad_interrupt>
  10:	30 c0       	rjmp	.+96     	; 0x72 <__bad_interrupt>
  12:	2f c0       	rjmp	.+94     	; 0x72 <__bad_interrupt>
  14:	2e c0       	rjmp	.+92     	; 0x72 <__bad_interrupt>
  16:	2d c0       	rjmp	.+90     	; 0x72 <__bad_interrupt>
  18:	2c c0       	rjmp	.+88     	; 0x72 <__bad_interrupt>
  1a:	2b c0       	rjmp	.+86     	; 0x72 <__bad_interrupt>
  1c:	2a c0       	rjmp	.+84     	; 0x72 <__bad_interrupt>
  1e:	29 c0       	rjmp	.+82     	; 0x72 <__bad_interrupt>
  20:	28 c0       	rjmp	.+80     	; 0x72 <__bad_interrupt>
  22:	27 c0       	rjmp	.+78     	; 0x72 <__bad_interrupt>
  24:	26 c0       	rjmp	.+76     	; 0x72 <__bad_interrupt>

00000026 <__ctors_start>:
  26:	4b 00       	.word	0x004b	; ????

00000028 <__ctors_end>:
  28:	11 24       	eor	r1, r1
  2a:	1f be       	out	0x3f, r1	; 63
  2c:	cf e5       	ldi	r28, 0x5F	; 95
  2e:	d4 e0       	ldi	r29, 0x04	; 4
  30:	de bf       	out	0x3e, r29	; 62
  32:	cd bf       	out	0x3d, r28	; 61

00000034 <__do_copy_data>:
  34:	10 e0       	ldi	r17, 0x00	; 0
  36:	a0 e6       	ldi	r26, 0x60	; 96
  38:	b0 e0       	ldi	r27, 0x00	; 0
  3a:	e2 e2       	ldi	r30, 0x22	; 34
  3c:	fa e0       	ldi	r31, 0x0A	; 10
  3e:	02 c0       	rjmp	.+4      	; 0x44 <.do_copy_data_start>

00000040 <.do_copy_data_loop>:
  40:	05 90       	lpm	r0, Z+
  42:	0d 92       	st	X+, r0

00000044 <.do_copy_data_start>:
  44:	aa 36       	cpi	r26, 0x6A	; 106
  46:	b1 07       	cpc	r27, r17
  48:	d9 f7       	brne	.-10     	; 0x40 <.do_copy_data_loop>

0000004a <__do_clear_bss>:
  4a:	10 e0       	ldi	r17, 0x00	; 0
  4c:	aa e6       	ldi	r26, 0x6A	; 106
  4e:	b0 e0       	ldi	r27, 0x00	; 0
  50:	01 c0       	rjmp	.+2      	; 0x54 <.do_clear_bss_start>

00000052 <.do_clear_bss_loop>:
  52:	1d 92       	st	X+, r1

00000054 <.do_clear_bss_start>:
  54:	a0 37       	cpi	r26, 0x70	; 112
  56:	b1 07       	cpc	r27, r17
  58:	e1 f7       	brne	.-8      	; 0x52 <.do_clear_bss_loop>

0000005a <__do_global_ctors>:
  5a:	10 e0       	ldi	r17, 0x00	; 0
  5c:	c8 e2       	ldi	r28, 0x28	; 40
  5e:	d0 e0       	ldi	r29, 0x00	; 0
  60:	03 c0       	rjmp	.+6      	; 0x68 <.do_global_ctors_start>

00000062 <.do_global_ctors_loop>:
  62:	22 97       	sbiw	r28, 0x02	; 2
  64:	fe 01       	movw	r30, r28
  66:	0c d1       	rcall	.+536    	; 0x280 <__tablejump__>

00000068 <.do_global_ctors_start>:
  68:	c6 32       	cpi	r28, 0x26	; 38
  6a:	d1 07       	cpc	r29, r17
  6c:	d1 f7       	brne	.-12     	; 0x62 <.do_global_ctors_loop>
  6e:	7f d0       	rcall	.+254    	; 0x16e <main>
  70:	d6 c4       	rjmp	.+2476   	; 0xa1e <_exit>

00000072 <__bad_interrupt>:
  72:	c6 cf       	rjmp	.-116    	; 0x0 <__vectors>

00000074 <_Z10USART_Initj>:

char *string_read = (char*) malloc(sizeof(char) * 100);

void USART_Init(unsigned int ubrr)
{
	UBRRH = (unsigned char) (ubrr >> 8);
  74:	e0 e4       	ldi	r30, 0x40	; 64
  76:	f0 e0       	ldi	r31, 0x00	; 0
  78:	90 83       	st	Z, r25
	UBRRL = (unsigned char) ubrr;
  7a:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1 << RXEN) | (1 << TXEN);
  7c:	88 e1       	ldi	r24, 0x18	; 24
  7e:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL) | (1 << USBS) | (3 << UCSZ0);
  80:	8e e8       	ldi	r24, 0x8E	; 142
  82:	80 83       	st	Z, r24
}
  84:	08 95       	ret

00000086 <_Z14USART_Transmith>:

void USART_Transmit(unsigned char data){
  86:	98 2f       	mov	r25, r24
	while (!(UCSRA & (1 << UDRE))) {};
  88:	eb e2       	ldi	r30, 0x2B	; 43
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	80 81       	ld	r24, Z
  8e:	85 ff       	sbrs	r24, 5
  90:	fd cf       	rjmp	.-6      	; 0x8c <_Z14USART_Transmith+0x6>
	UDR = data;
  92:	9c b9       	out	0x0c, r25	; 12
}
  94:	08 95       	ret

00000096 <_GLOBAL__I_string_read>:
#define MYUBRR F_CPU/16/BAUD - 1


typedef uint8_t uint;

char *string_read = (char*) malloc(sizeof(char) * 100);
  96:	84 e6       	ldi	r24, 0x64	; 100
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	f6 d0       	rcall	.+492    	; 0x288 <malloc>
  9c:	80 93 6a 00 	sts	0x006A, r24
  a0:	90 93 6b 00 	sts	0x006B, r25
		USART_Transmit_With_CRNL(str);

		_delay_ms(100);
    }
	return (0);
}
  a4:	08 95       	ret

000000a6 <_Z21USART_Transmit_StringPc>:
void USART_Transmit(unsigned char data){
	while (!(UCSRA & (1 << UDRE))) {};
	UDR = data;
}

bool USART_Transmit_String(char* command)
  a6:	ff 92       	push	r15
  a8:	0f 93       	push	r16
  aa:	1f 93       	push	r17
  ac:	cf 93       	push	r28
  ae:	df 93       	push	r29
  b0:	8c 01       	movw	r16, r24
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	c0 e0       	ldi	r28, 0x00	; 0
  b6:	d0 e0       	ldi	r29, 0x00	; 0
{
	bool ok = false;
	for (int i = 0; i < strlen(command); i++){
  b8:	ff 24       	eor	r15, r15
  ba:	f3 94       	inc	r15
  bc:	07 c0       	rjmp	.+14     	; 0xcc <_Z21USART_Transmit_StringPc+0x26>
		USART_Transmit(command[i]);
  be:	f8 01       	movw	r30, r16
  c0:	e2 0f       	add	r30, r18
  c2:	f3 1f       	adc	r31, r19
  c4:	80 81       	ld	r24, Z
  c6:	df df       	rcall	.-66     	; 0x86 <_Z14USART_Transmith>
}

bool USART_Transmit_String(char* command)
{
	bool ok = false;
	for (int i = 0; i < strlen(command); i++){
  c8:	21 96       	adiw	r28, 0x01	; 1
  ca:	8f 2d       	mov	r24, r15
  cc:	9e 01       	movw	r18, r28
  ce:	a0 2f       	mov	r26, r16
  d0:	b1 2f       	mov	r27, r17
  d2:	fd 01       	movw	r30, r26
  d4:	01 90       	ld	r0, Z+
  d6:	00 20       	and	r0, r0
  d8:	e9 f7       	brne	.-6      	; 0xd4 <_Z21USART_Transmit_StringPc+0x2e>
  da:	31 97       	sbiw	r30, 0x01	; 1
  dc:	ea 1b       	sub	r30, r26
  de:	fb 0b       	sbc	r31, r27
  e0:	ce 17       	cp	r28, r30
  e2:	df 07       	cpc	r29, r31
  e4:	60 f3       	brcs	.-40     	; 0xbe <_Z21USART_Transmit_StringPc+0x18>
		USART_Transmit(command[i]);
		ok = true;
	}
	return ok;
}
  e6:	df 91       	pop	r29
  e8:	cf 91       	pop	r28
  ea:	1f 91       	pop	r17
  ec:	0f 91       	pop	r16
  ee:	ff 90       	pop	r15
  f0:	08 95       	ret

000000f2 <_Z24USART_Transmit_With_CRNLPc>:

bool USART_Transmit_With_CRNL(char *command){
  f2:	ef 92       	push	r14
  f4:	ff 92       	push	r15
  f6:	0f 93       	push	r16
  f8:	1f 93       	push	r17
  fa:	cf 93       	push	r28
  fc:	df 93       	push	r29
  fe:	ec 01       	movw	r28, r24
	uint length = strlen(command);
 100:	e8 2f       	mov	r30, r24
 102:	fd 2f       	mov	r31, r29
 104:	df 01       	movw	r26, r30
 106:	0d 90       	ld	r0, X+
 108:	00 20       	and	r0, r0
 10a:	e9 f7       	brne	.-6      	; 0x106 <_Z24USART_Transmit_With_CRNLPc+0x14>
 10c:	8d 01       	movw	r16, r26
 10e:	01 50       	subi	r16, 0x01	; 1
 110:	10 40       	sbci	r17, 0x00	; 0
 112:	0e 1b       	sub	r16, r30
 114:	1f 0b       	sbc	r17, r31
 116:	10 2f       	mov	r17, r16
	char *string_with_flags = (char*) malloc(sizeof(char) * (length + 10));
 118:	80 2f       	mov	r24, r16
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	0a 96       	adiw	r24, 0x0a	; 10
 11e:	b4 d0       	rcall	.+360    	; 0x288 <malloc>
 120:	ac 01       	movw	r20, r24
 122:	7a 01       	movw	r14, r20
	for (uint i = 0; i < length; i++){
 124:	00 23       	and	r16, r16
 126:	71 f0       	breq	.+28     	; 0x144 <_Z24USART_Transmit_With_CRNLPc+0x52>
 128:	20 e0       	ldi	r18, 0x00	; 0
 12a:	30 e0       	ldi	r19, 0x00	; 0
		string_with_flags[i] = command[i];
 12c:	fa 01       	movw	r30, r20
 12e:	e2 0f       	add	r30, r18
 130:	f3 1f       	adc	r31, r19
 132:	de 01       	movw	r26, r28
 134:	a2 0f       	add	r26, r18
 136:	b3 1f       	adc	r27, r19
 138:	8c 91       	ld	r24, X
 13a:	80 83       	st	Z, r24
 13c:	2f 5f       	subi	r18, 0xFF	; 255
 13e:	3f 4f       	sbci	r19, 0xFF	; 255
}

bool USART_Transmit_With_CRNL(char *command){
	uint length = strlen(command);
	char *string_with_flags = (char*) malloc(sizeof(char) * (length + 10));
	for (uint i = 0; i < length; i++){
 140:	21 17       	cp	r18, r17
 142:	a0 f3       	brcs	.-24     	; 0x12c <_Z24USART_Transmit_With_CRNLPc+0x3a>
		string_with_flags[i] = command[i];
	}
	string_with_flags[length]     = '\r';
 144:	d7 01       	movw	r26, r14
 146:	a1 0f       	add	r26, r17
 148:	b1 1d       	adc	r27, r1
 14a:	fd 01       	movw	r30, r26
 14c:	8d e0       	ldi	r24, 0x0D	; 13
 14e:	81 93       	st	Z+, r24
	string_with_flags[length + 1] = '\n';
 150:	8a e0       	ldi	r24, 0x0A	; 10
 152:	80 83       	st	Z, r24
	string_with_flags[length + 2] = '\0';
 154:	12 96       	adiw	r26, 0x02	; 2
 156:	1c 92       	st	X, r1
	USART_Transmit_String(string_with_flags);
 158:	c7 01       	movw	r24, r14
 15a:	a5 df       	rcall	.-182    	; 0xa6 <_Z21USART_Transmit_StringPc>
	free (string_with_flags); //Free the memory
 15c:	c7 01       	movw	r24, r14
 15e:	41 d1       	rcall	.+642    	; 0x3e2 <free>
}
 160:	df 91       	pop	r29
 162:	cf 91       	pop	r28
 164:	1f 91       	pop	r17
 166:	0f 91       	pop	r16
 168:	ff 90       	pop	r15
 16a:	ef 90       	pop	r14
 16c:	08 95       	ret

0000016e <main>:
	ADMUX |= (1 << REFS0);
	ADCSRA |= (1 << ADPS1) | (1 << ADPS0);
	ADCSRA |= (1 << ADEN);
}

int main(void)
 16e:	2f 92       	push	r2
 170:	3f 92       	push	r3
 172:	4f 92       	push	r4
 174:	5f 92       	push	r5
 176:	6f 92       	push	r6
 178:	7f 92       	push	r7
 17a:	8f 92       	push	r8
 17c:	9f 92       	push	r9
 17e:	af 92       	push	r10
 180:	bf 92       	push	r11
 182:	cf 92       	push	r12
 184:	df 92       	push	r13
 186:	ef 92       	push	r14
 188:	ff 92       	push	r15
 18a:	0f 93       	push	r16
 18c:	1f 93       	push	r17
 18e:	df 93       	push	r29
 190:	cf 93       	push	r28
 192:	cd b7       	in	r28, 0x3d	; 61
 194:	de b7       	in	r29, 0x3e	; 62
 196:	2a 97       	sbiw	r28, 0x0a	; 10
 198:	0f b6       	in	r0, 0x3f	; 63
 19a:	f8 94       	cli
 19c:	de bf       	out	0x3e, r29	; 62
 19e:	0f be       	out	0x3f, r0	; 63
 1a0:	cd bf       	out	0x3d, r28	; 61
{
	//Inits
	USART_Init(MYUBRR);
 1a2:	87 e6       	ldi	r24, 0x67	; 103
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	66 df       	rcall	.-308    	; 0x74 <_Z10USART_Initj>
	string_read[i] = '\0';
	USART_Transmit_With_CRNL(string_read);
}

static inline void initADC0(void){
	ADMUX |= (1 << REFS0);
 1a8:	e7 e2       	ldi	r30, 0x27	; 39
 1aa:	f0 e0       	ldi	r31, 0x00	; 0
 1ac:	80 81       	ld	r24, Z
 1ae:	80 64       	ori	r24, 0x40	; 64
 1b0:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS1) | (1 << ADPS0);
 1b2:	e6 e2       	ldi	r30, 0x26	; 38
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	80 81       	ld	r24, Z
 1b8:	83 60       	ori	r24, 0x03	; 3
 1ba:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN);
 1bc:	80 81       	ld	r24, Z
 1be:	80 68       	ori	r24, 0x80	; 128
 1c0:	80 83       	st	Z, r24
	//Inits
	USART_Init(MYUBRR);
	uint16_t adcValue;
	uint8_t i;
	initADC0();
	LED_DDR	= 0xFF;
 1c2:	8f ef       	ldi	r24, 0xFF	; 255
 1c4:	87 bb       	out	0x17, r24	; 23
	
    /* Replace with your application code */
    while (1) 
    {
		
		ADCSRA |= (1 << ADSC);
 1c6:	0f 2e       	mov	r0, r31
 1c8:	f6 e2       	ldi	r31, 0x26	; 38
 1ca:	cf 2e       	mov	r12, r31
 1cc:	dd 24       	eor	r13, r13
 1ce:	f0 2d       	mov	r31, r0
		loop_until_bit_is_clear(ADCSRA, ADSC);
		
		adcValue = ADC;
 1d0:	0f 2e       	mov	r0, r31
 1d2:	f4 e2       	ldi	r31, 0x24	; 36
 1d4:	2f 2e       	mov	r2, r31
 1d6:	33 24       	eor	r3, r3
 1d8:	f0 2d       	mov	r31, r0
		
		
		char str[10];
		
		//Converts number to String
		sprintf(str, "%d", adcValue);
 1da:	4e 01       	movw	r8, r28
 1dc:	08 94       	sec
 1de:	81 1c       	adc	r8, r1
 1e0:	91 1c       	adc	r9, r1
 1e2:	0f 2e       	mov	r0, r31
 1e4:	f0 e6       	ldi	r31, 0x60	; 96
 1e6:	6f 2e       	mov	r6, r31
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	7f 2e       	mov	r7, r31
 1ec:	f0 2d       	mov	r31, r0
		
		if (adcValue > 512) LED_PORT |= (1 << LED1);
		else LED_PORT &= ~(1 << LED1);
 1ee:	0f 2e       	mov	r0, r31
 1f0:	f8 e3       	ldi	r31, 0x38	; 56
 1f2:	af 2e       	mov	r10, r31
 1f4:	bb 24       	eor	r11, r11
 1f6:	f0 2d       	mov	r31, r0
		
		// Sending the value via UART
		USART_Transmit_With_CRNL(str);
 1f8:	0f 2e       	mov	r0, r31
 1fa:	f8 ee       	ldi	r31, 0xE8	; 232
 1fc:	4f 2e       	mov	r4, r31
 1fe:	f3 e0       	ldi	r31, 0x03	; 3
 200:	5f 2e       	mov	r5, r31
 202:	f0 2d       	mov	r31, r0
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 204:	0f 2e       	mov	r0, r31
 206:	f0 e9       	ldi	r31, 0x90	; 144
 208:	ef 2e       	mov	r14, r31
 20a:	f1 e0       	ldi	r31, 0x01	; 1
 20c:	ff 2e       	mov	r15, r31
 20e:	f0 2d       	mov	r31, r0
	
    /* Replace with your application code */
    while (1) 
    {
		
		ADCSRA |= (1 << ADSC);
 210:	f6 01       	movw	r30, r12
 212:	80 81       	ld	r24, Z
 214:	80 64       	ori	r24, 0x40	; 64
 216:	80 83       	st	Z, r24
		loop_until_bit_is_clear(ADCSRA, ADSC);
 218:	f6 01       	movw	r30, r12
 21a:	80 81       	ld	r24, Z
 21c:	86 fd       	sbrc	r24, 6
 21e:	fc cf       	rjmp	.-8      	; 0x218 <main+0xaa>
		
		adcValue = ADC;
 220:	f1 01       	movw	r30, r2
 222:	00 81       	ld	r16, Z
 224:	11 81       	ldd	r17, Z+1	; 0x01
		
		
		char str[10];
		
		//Converts number to String
		sprintf(str, "%d", adcValue);
 226:	00 d0       	rcall	.+0      	; 0x228 <main+0xba>
 228:	00 d0       	rcall	.+0      	; 0x22a <main+0xbc>
 22a:	00 d0       	rcall	.+0      	; 0x22c <main+0xbe>
 22c:	ed b7       	in	r30, 0x3d	; 61
 22e:	fe b7       	in	r31, 0x3e	; 62
 230:	31 96       	adiw	r30, 0x01	; 1
 232:	91 82       	std	Z+1, r9	; 0x01
 234:	80 82       	st	Z, r8
 236:	73 82       	std	Z+3, r7	; 0x03
 238:	62 82       	std	Z+2, r6	; 0x02
 23a:	15 83       	std	Z+5, r17	; 0x05
 23c:	04 83       	std	Z+4, r16	; 0x04
 23e:	29 d1       	rcall	.+594    	; 0x492 <sprintf>
		
		if (adcValue > 512) LED_PORT |= (1 << LED1);
 240:	8d b7       	in	r24, 0x3d	; 61
 242:	9e b7       	in	r25, 0x3e	; 62
 244:	06 96       	adiw	r24, 0x06	; 6
 246:	0f b6       	in	r0, 0x3f	; 63
 248:	f8 94       	cli
 24a:	9e bf       	out	0x3e, r25	; 62
 24c:	0f be       	out	0x3f, r0	; 63
 24e:	8d bf       	out	0x3d, r24	; 61
 250:	01 50       	subi	r16, 0x01	; 1
 252:	12 40       	sbci	r17, 0x02	; 2
 254:	28 f0       	brcs	.+10     	; 0x260 <main+0xf2>
 256:	f5 01       	movw	r30, r10
 258:	80 81       	ld	r24, Z
 25a:	82 60       	ori	r24, 0x02	; 2
 25c:	80 83       	st	Z, r24
 25e:	04 c0       	rjmp	.+8      	; 0x268 <main+0xfa>
		else LED_PORT &= ~(1 << LED1);
 260:	f5 01       	movw	r30, r10
 262:	80 81       	ld	r24, Z
 264:	8d 7f       	andi	r24, 0xFD	; 253
 266:	80 83       	st	Z, r24
		
		// Sending the value via UART
		USART_Transmit_With_CRNL(str);
 268:	c4 01       	movw	r24, r8
 26a:	43 df       	rcall	.-378    	; 0xf2 <_Z24USART_Transmit_With_CRNLPc>
 26c:	92 01       	movw	r18, r4
 26e:	c7 01       	movw	r24, r14
 270:	01 97       	sbiw	r24, 0x01	; 1
 272:	f1 f7       	brne	.-4      	; 0x270 <main+0x102>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 274:	21 50       	subi	r18, 0x01	; 1
 276:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 278:	d1 f7       	brne	.-12     	; 0x26e <main+0x100>
 27a:	ca cf       	rjmp	.-108    	; 0x210 <main+0xa2>

0000027c <__tablejump2__>:
 27c:	ee 0f       	add	r30, r30
 27e:	ff 1f       	adc	r31, r31

00000280 <__tablejump__>:
 280:	05 90       	lpm	r0, Z+
 282:	f4 91       	lpm	r31, Z+
 284:	e0 2d       	mov	r30, r0
 286:	09 94       	ijmp

00000288 <malloc>:
 288:	cf 93       	push	r28
 28a:	df 93       	push	r29
 28c:	bc 01       	movw	r22, r24
 28e:	82 30       	cpi	r24, 0x02	; 2
 290:	91 05       	cpc	r25, r1
 292:	10 f4       	brcc	.+4      	; 0x298 <malloc+0x10>
 294:	62 e0       	ldi	r22, 0x02	; 2
 296:	70 e0       	ldi	r23, 0x00	; 0
 298:	a0 91 6e 00 	lds	r26, 0x006E
 29c:	b0 91 6f 00 	lds	r27, 0x006F
 2a0:	ed 01       	movw	r28, r26
 2a2:	e0 e0       	ldi	r30, 0x00	; 0
 2a4:	f0 e0       	ldi	r31, 0x00	; 0
 2a6:	40 e0       	ldi	r20, 0x00	; 0
 2a8:	50 e0       	ldi	r21, 0x00	; 0
 2aa:	21 c0       	rjmp	.+66     	; 0x2ee <malloc+0x66>
 2ac:	88 81       	ld	r24, Y
 2ae:	99 81       	ldd	r25, Y+1	; 0x01
 2b0:	86 17       	cp	r24, r22
 2b2:	97 07       	cpc	r25, r23
 2b4:	69 f4       	brne	.+26     	; 0x2d0 <malloc+0x48>
 2b6:	8a 81       	ldd	r24, Y+2	; 0x02
 2b8:	9b 81       	ldd	r25, Y+3	; 0x03
 2ba:	30 97       	sbiw	r30, 0x00	; 0
 2bc:	19 f0       	breq	.+6      	; 0x2c4 <malloc+0x3c>
 2be:	93 83       	std	Z+3, r25	; 0x03
 2c0:	82 83       	std	Z+2, r24	; 0x02
 2c2:	04 c0       	rjmp	.+8      	; 0x2cc <malloc+0x44>
 2c4:	90 93 6f 00 	sts	0x006F, r25
 2c8:	80 93 6e 00 	sts	0x006E, r24
 2cc:	fe 01       	movw	r30, r28
 2ce:	34 c0       	rjmp	.+104    	; 0x338 <malloc+0xb0>
 2d0:	68 17       	cp	r22, r24
 2d2:	79 07       	cpc	r23, r25
 2d4:	38 f4       	brcc	.+14     	; 0x2e4 <malloc+0x5c>
 2d6:	41 15       	cp	r20, r1
 2d8:	51 05       	cpc	r21, r1
 2da:	19 f0       	breq	.+6      	; 0x2e2 <malloc+0x5a>
 2dc:	84 17       	cp	r24, r20
 2de:	95 07       	cpc	r25, r21
 2e0:	08 f4       	brcc	.+2      	; 0x2e4 <malloc+0x5c>
 2e2:	ac 01       	movw	r20, r24
 2e4:	fe 01       	movw	r30, r28
 2e6:	8a 81       	ldd	r24, Y+2	; 0x02
 2e8:	9b 81       	ldd	r25, Y+3	; 0x03
 2ea:	9c 01       	movw	r18, r24
 2ec:	e9 01       	movw	r28, r18
 2ee:	20 97       	sbiw	r28, 0x00	; 0
 2f0:	e9 f6       	brne	.-70     	; 0x2ac <malloc+0x24>
 2f2:	41 15       	cp	r20, r1
 2f4:	51 05       	cpc	r21, r1
 2f6:	a9 f1       	breq	.+106    	; 0x362 <malloc+0xda>
 2f8:	ca 01       	movw	r24, r20
 2fa:	86 1b       	sub	r24, r22
 2fc:	97 0b       	sbc	r25, r23
 2fe:	04 97       	sbiw	r24, 0x04	; 4
 300:	08 f4       	brcc	.+2      	; 0x304 <malloc+0x7c>
 302:	ba 01       	movw	r22, r20
 304:	e0 e0       	ldi	r30, 0x00	; 0
 306:	f0 e0       	ldi	r31, 0x00	; 0
 308:	2a c0       	rjmp	.+84     	; 0x35e <malloc+0xd6>
 30a:	8d 91       	ld	r24, X+
 30c:	9c 91       	ld	r25, X
 30e:	11 97       	sbiw	r26, 0x01	; 1
 310:	84 17       	cp	r24, r20
 312:	95 07       	cpc	r25, r21
 314:	f9 f4       	brne	.+62     	; 0x354 <malloc+0xcc>
 316:	64 17       	cp	r22, r20
 318:	75 07       	cpc	r23, r21
 31a:	81 f4       	brne	.+32     	; 0x33c <malloc+0xb4>
 31c:	12 96       	adiw	r26, 0x02	; 2
 31e:	8d 91       	ld	r24, X+
 320:	9c 91       	ld	r25, X
 322:	13 97       	sbiw	r26, 0x03	; 3
 324:	30 97       	sbiw	r30, 0x00	; 0
 326:	19 f0       	breq	.+6      	; 0x32e <malloc+0xa6>
 328:	93 83       	std	Z+3, r25	; 0x03
 32a:	82 83       	std	Z+2, r24	; 0x02
 32c:	04 c0       	rjmp	.+8      	; 0x336 <malloc+0xae>
 32e:	90 93 6f 00 	sts	0x006F, r25
 332:	80 93 6e 00 	sts	0x006E, r24
 336:	fd 01       	movw	r30, r26
 338:	32 96       	adiw	r30, 0x02	; 2
 33a:	4f c0       	rjmp	.+158    	; 0x3da <malloc+0x152>
 33c:	ca 01       	movw	r24, r20
 33e:	86 1b       	sub	r24, r22
 340:	97 0b       	sbc	r25, r23
 342:	fd 01       	movw	r30, r26
 344:	e8 0f       	add	r30, r24
 346:	f9 1f       	adc	r31, r25
 348:	61 93       	st	Z+, r22
 34a:	71 93       	st	Z+, r23
 34c:	02 97       	sbiw	r24, 0x02	; 2
 34e:	8d 93       	st	X+, r24
 350:	9c 93       	st	X, r25
 352:	43 c0       	rjmp	.+134    	; 0x3da <malloc+0x152>
 354:	fd 01       	movw	r30, r26
 356:	82 81       	ldd	r24, Z+2	; 0x02
 358:	93 81       	ldd	r25, Z+3	; 0x03
 35a:	9c 01       	movw	r18, r24
 35c:	d9 01       	movw	r26, r18
 35e:	10 97       	sbiw	r26, 0x00	; 0
 360:	a1 f6       	brne	.-88     	; 0x30a <malloc+0x82>
 362:	80 91 6c 00 	lds	r24, 0x006C
 366:	90 91 6d 00 	lds	r25, 0x006D
 36a:	89 2b       	or	r24, r25
 36c:	41 f4       	brne	.+16     	; 0x37e <malloc+0xf6>
 36e:	80 91 65 00 	lds	r24, 0x0065
 372:	90 91 66 00 	lds	r25, 0x0066
 376:	90 93 6d 00 	sts	0x006D, r25
 37a:	80 93 6c 00 	sts	0x006C, r24
 37e:	40 91 67 00 	lds	r20, 0x0067
 382:	50 91 68 00 	lds	r21, 0x0068
 386:	41 15       	cp	r20, r1
 388:	51 05       	cpc	r21, r1
 38a:	41 f4       	brne	.+16     	; 0x39c <malloc+0x114>
 38c:	4d b7       	in	r20, 0x3d	; 61
 38e:	5e b7       	in	r21, 0x3e	; 62
 390:	80 91 63 00 	lds	r24, 0x0063
 394:	90 91 64 00 	lds	r25, 0x0064
 398:	48 1b       	sub	r20, r24
 39a:	59 0b       	sbc	r21, r25
 39c:	20 91 6c 00 	lds	r18, 0x006C
 3a0:	30 91 6d 00 	lds	r19, 0x006D
 3a4:	24 17       	cp	r18, r20
 3a6:	35 07       	cpc	r19, r21
 3a8:	b0 f4       	brcc	.+44     	; 0x3d6 <malloc+0x14e>
 3aa:	ca 01       	movw	r24, r20
 3ac:	82 1b       	sub	r24, r18
 3ae:	93 0b       	sbc	r25, r19
 3b0:	86 17       	cp	r24, r22
 3b2:	97 07       	cpc	r25, r23
 3b4:	80 f0       	brcs	.+32     	; 0x3d6 <malloc+0x14e>
 3b6:	ab 01       	movw	r20, r22
 3b8:	4e 5f       	subi	r20, 0xFE	; 254
 3ba:	5f 4f       	sbci	r21, 0xFF	; 255
 3bc:	84 17       	cp	r24, r20
 3be:	95 07       	cpc	r25, r21
 3c0:	50 f0       	brcs	.+20     	; 0x3d6 <malloc+0x14e>
 3c2:	42 0f       	add	r20, r18
 3c4:	53 1f       	adc	r21, r19
 3c6:	50 93 6d 00 	sts	0x006D, r21
 3ca:	40 93 6c 00 	sts	0x006C, r20
 3ce:	f9 01       	movw	r30, r18
 3d0:	61 93       	st	Z+, r22
 3d2:	71 93       	st	Z+, r23
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <malloc+0x152>
 3d6:	e0 e0       	ldi	r30, 0x00	; 0
 3d8:	f0 e0       	ldi	r31, 0x00	; 0
 3da:	cf 01       	movw	r24, r30
 3dc:	df 91       	pop	r29
 3de:	cf 91       	pop	r28
 3e0:	08 95       	ret

000003e2 <free>:
 3e2:	cf 93       	push	r28
 3e4:	df 93       	push	r29
 3e6:	00 97       	sbiw	r24, 0x00	; 0
 3e8:	09 f4       	brne	.+2      	; 0x3ec <free+0xa>
 3ea:	50 c0       	rjmp	.+160    	; 0x48c <__stack+0x2d>
 3ec:	ec 01       	movw	r28, r24
 3ee:	22 97       	sbiw	r28, 0x02	; 2
 3f0:	1b 82       	std	Y+3, r1	; 0x03
 3f2:	1a 82       	std	Y+2, r1	; 0x02
 3f4:	a0 91 6e 00 	lds	r26, 0x006E
 3f8:	b0 91 6f 00 	lds	r27, 0x006F
 3fc:	10 97       	sbiw	r26, 0x00	; 0
 3fe:	09 f1       	breq	.+66     	; 0x442 <free+0x60>
 400:	40 e0       	ldi	r20, 0x00	; 0
 402:	50 e0       	ldi	r21, 0x00	; 0
 404:	ac 17       	cp	r26, r28
 406:	bd 07       	cpc	r27, r29
 408:	08 f1       	brcs	.+66     	; 0x44c <free+0x6a>
 40a:	bb 83       	std	Y+3, r27	; 0x03
 40c:	aa 83       	std	Y+2, r26	; 0x02
 40e:	fe 01       	movw	r30, r28
 410:	21 91       	ld	r18, Z+
 412:	31 91       	ld	r19, Z+
 414:	e2 0f       	add	r30, r18
 416:	f3 1f       	adc	r31, r19
 418:	ae 17       	cp	r26, r30
 41a:	bf 07       	cpc	r27, r31
 41c:	79 f4       	brne	.+30     	; 0x43c <free+0x5a>
 41e:	8d 91       	ld	r24, X+
 420:	9c 91       	ld	r25, X
 422:	11 97       	sbiw	r26, 0x01	; 1
 424:	28 0f       	add	r18, r24
 426:	39 1f       	adc	r19, r25
 428:	2e 5f       	subi	r18, 0xFE	; 254
 42a:	3f 4f       	sbci	r19, 0xFF	; 255
 42c:	39 83       	std	Y+1, r19	; 0x01
 42e:	28 83       	st	Y, r18
 430:	12 96       	adiw	r26, 0x02	; 2
 432:	8d 91       	ld	r24, X+
 434:	9c 91       	ld	r25, X
 436:	13 97       	sbiw	r26, 0x03	; 3
 438:	9b 83       	std	Y+3, r25	; 0x03
 43a:	8a 83       	std	Y+2, r24	; 0x02
 43c:	41 15       	cp	r20, r1
 43e:	51 05       	cpc	r21, r1
 440:	71 f4       	brne	.+28     	; 0x45e <free+0x7c>
 442:	d0 93 6f 00 	sts	0x006F, r29
 446:	c0 93 6e 00 	sts	0x006E, r28
 44a:	20 c0       	rjmp	.+64     	; 0x48c <__stack+0x2d>
 44c:	12 96       	adiw	r26, 0x02	; 2
 44e:	8d 91       	ld	r24, X+
 450:	9c 91       	ld	r25, X
 452:	13 97       	sbiw	r26, 0x03	; 3
 454:	ad 01       	movw	r20, r26
 456:	00 97       	sbiw	r24, 0x00	; 0
 458:	11 f0       	breq	.+4      	; 0x45e <free+0x7c>
 45a:	dc 01       	movw	r26, r24
 45c:	d3 cf       	rjmp	.-90     	; 0x404 <free+0x22>
 45e:	fa 01       	movw	r30, r20
 460:	d3 83       	std	Z+3, r29	; 0x03
 462:	c2 83       	std	Z+2, r28	; 0x02
 464:	21 91       	ld	r18, Z+
 466:	31 91       	ld	r19, Z+
 468:	e2 0f       	add	r30, r18
 46a:	f3 1f       	adc	r31, r19
 46c:	ce 17       	cp	r28, r30
 46e:	df 07       	cpc	r29, r31
 470:	69 f4       	brne	.+26     	; 0x48c <__stack+0x2d>
 472:	88 81       	ld	r24, Y
 474:	99 81       	ldd	r25, Y+1	; 0x01
 476:	28 0f       	add	r18, r24
 478:	39 1f       	adc	r19, r25
 47a:	2e 5f       	subi	r18, 0xFE	; 254
 47c:	3f 4f       	sbci	r19, 0xFF	; 255
 47e:	fa 01       	movw	r30, r20
 480:	31 83       	std	Z+1, r19	; 0x01
 482:	20 83       	st	Z, r18
 484:	8a 81       	ldd	r24, Y+2	; 0x02
 486:	9b 81       	ldd	r25, Y+3	; 0x03
 488:	93 83       	std	Z+3, r25	; 0x03
 48a:	82 83       	std	Z+2, r24	; 0x02
 48c:	df 91       	pop	r29
 48e:	cf 91       	pop	r28
 490:	08 95       	ret

00000492 <sprintf>:
 492:	ae e0       	ldi	r26, 0x0E	; 14
 494:	b0 e0       	ldi	r27, 0x00	; 0
 496:	ee e4       	ldi	r30, 0x4E	; 78
 498:	f2 e0       	ldi	r31, 0x02	; 2
 49a:	98 c2       	rjmp	.+1328   	; 0x9cc <__prologue_saves__+0x1c>
 49c:	0d 89       	ldd	r16, Y+21	; 0x15
 49e:	1e 89       	ldd	r17, Y+22	; 0x16
 4a0:	86 e0       	ldi	r24, 0x06	; 6
 4a2:	8c 83       	std	Y+4, r24	; 0x04
 4a4:	1a 83       	std	Y+2, r17	; 0x02
 4a6:	09 83       	std	Y+1, r16	; 0x01
 4a8:	8f ef       	ldi	r24, 0xFF	; 255
 4aa:	9f e7       	ldi	r25, 0x7F	; 127
 4ac:	9e 83       	std	Y+6, r25	; 0x06
 4ae:	8d 83       	std	Y+5, r24	; 0x05
 4b0:	9e 01       	movw	r18, r28
 4b2:	27 5e       	subi	r18, 0xE7	; 231
 4b4:	3f 4f       	sbci	r19, 0xFF	; 255
 4b6:	ce 01       	movw	r24, r28
 4b8:	01 96       	adiw	r24, 0x01	; 1
 4ba:	6f 89       	ldd	r22, Y+23	; 0x17
 4bc:	78 8d       	ldd	r23, Y+24	; 0x18
 4be:	a9 01       	movw	r20, r18
 4c0:	09 d0       	rcall	.+18     	; 0x4d4 <vfprintf>
 4c2:	2f 81       	ldd	r18, Y+7	; 0x07
 4c4:	38 85       	ldd	r19, Y+8	; 0x08
 4c6:	02 0f       	add	r16, r18
 4c8:	13 1f       	adc	r17, r19
 4ca:	f8 01       	movw	r30, r16
 4cc:	10 82       	st	Z, r1
 4ce:	2e 96       	adiw	r28, 0x0e	; 14
 4d0:	e4 e0       	ldi	r30, 0x04	; 4
 4d2:	98 c2       	rjmp	.+1328   	; 0xa04 <__epilogue_restores__+0x1c>

000004d4 <vfprintf>:
 4d4:	ab e0       	ldi	r26, 0x0B	; 11
 4d6:	b0 e0       	ldi	r27, 0x00	; 0
 4d8:	ef e6       	ldi	r30, 0x6F	; 111
 4da:	f2 e0       	ldi	r31, 0x02	; 2
 4dc:	69 c2       	rjmp	.+1234   	; 0x9b0 <__prologue_saves__>
 4de:	3c 01       	movw	r6, r24
 4e0:	2b 01       	movw	r4, r22
 4e2:	5a 01       	movw	r10, r20
 4e4:	fc 01       	movw	r30, r24
 4e6:	17 82       	std	Z+7, r1	; 0x07
 4e8:	16 82       	std	Z+6, r1	; 0x06
 4ea:	83 81       	ldd	r24, Z+3	; 0x03
 4ec:	81 fd       	sbrc	r24, 1
 4ee:	03 c0       	rjmp	.+6      	; 0x4f6 <vfprintf+0x22>
 4f0:	6f ef       	ldi	r22, 0xFF	; 255
 4f2:	7f ef       	ldi	r23, 0xFF	; 255
 4f4:	b9 c1       	rjmp	.+882    	; 0x868 <vfprintf+0x394>
 4f6:	9a e0       	ldi	r25, 0x0A	; 10
 4f8:	89 2e       	mov	r8, r25
 4fa:	1e 01       	movw	r2, r28
 4fc:	08 94       	sec
 4fe:	21 1c       	adc	r2, r1
 500:	31 1c       	adc	r3, r1
 502:	f3 01       	movw	r30, r6
 504:	23 81       	ldd	r18, Z+3	; 0x03
 506:	f2 01       	movw	r30, r4
 508:	23 fd       	sbrc	r18, 3
 50a:	85 91       	lpm	r24, Z+
 50c:	23 ff       	sbrs	r18, 3
 50e:	81 91       	ld	r24, Z+
 510:	2f 01       	movw	r4, r30
 512:	88 23       	and	r24, r24
 514:	09 f4       	brne	.+2      	; 0x518 <vfprintf+0x44>
 516:	a5 c1       	rjmp	.+842    	; 0x862 <vfprintf+0x38e>
 518:	85 32       	cpi	r24, 0x25	; 37
 51a:	39 f4       	brne	.+14     	; 0x52a <vfprintf+0x56>
 51c:	23 fd       	sbrc	r18, 3
 51e:	85 91       	lpm	r24, Z+
 520:	23 ff       	sbrs	r18, 3
 522:	81 91       	ld	r24, Z+
 524:	2f 01       	movw	r4, r30
 526:	85 32       	cpi	r24, 0x25	; 37
 528:	21 f4       	brne	.+8      	; 0x532 <vfprintf+0x5e>
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	b3 01       	movw	r22, r6
 52e:	b6 d1       	rcall	.+876    	; 0x89c <fputc>
 530:	e8 cf       	rjmp	.-48     	; 0x502 <vfprintf+0x2e>
 532:	98 2f       	mov	r25, r24
 534:	ff 24       	eor	r15, r15
 536:	ee 24       	eor	r14, r14
 538:	99 24       	eor	r9, r9
 53a:	ff e1       	ldi	r31, 0x1F	; 31
 53c:	ff 15       	cp	r31, r15
 53e:	d0 f0       	brcs	.+52     	; 0x574 <vfprintf+0xa0>
 540:	9b 32       	cpi	r25, 0x2B	; 43
 542:	69 f0       	breq	.+26     	; 0x55e <vfprintf+0x8a>
 544:	9c 32       	cpi	r25, 0x2C	; 44
 546:	28 f4       	brcc	.+10     	; 0x552 <vfprintf+0x7e>
 548:	90 32       	cpi	r25, 0x20	; 32
 54a:	59 f0       	breq	.+22     	; 0x562 <vfprintf+0x8e>
 54c:	93 32       	cpi	r25, 0x23	; 35
 54e:	91 f4       	brne	.+36     	; 0x574 <vfprintf+0xa0>
 550:	0e c0       	rjmp	.+28     	; 0x56e <vfprintf+0x9a>
 552:	9d 32       	cpi	r25, 0x2D	; 45
 554:	49 f0       	breq	.+18     	; 0x568 <vfprintf+0x94>
 556:	90 33       	cpi	r25, 0x30	; 48
 558:	69 f4       	brne	.+26     	; 0x574 <vfprintf+0xa0>
 55a:	41 e0       	ldi	r20, 0x01	; 1
 55c:	24 c0       	rjmp	.+72     	; 0x5a6 <vfprintf+0xd2>
 55e:	52 e0       	ldi	r21, 0x02	; 2
 560:	f5 2a       	or	r15, r21
 562:	84 e0       	ldi	r24, 0x04	; 4
 564:	f8 2a       	or	r15, r24
 566:	28 c0       	rjmp	.+80     	; 0x5b8 <vfprintf+0xe4>
 568:	98 e0       	ldi	r25, 0x08	; 8
 56a:	f9 2a       	or	r15, r25
 56c:	25 c0       	rjmp	.+74     	; 0x5b8 <vfprintf+0xe4>
 56e:	e0 e1       	ldi	r30, 0x10	; 16
 570:	fe 2a       	or	r15, r30
 572:	22 c0       	rjmp	.+68     	; 0x5b8 <vfprintf+0xe4>
 574:	f7 fc       	sbrc	r15, 7
 576:	29 c0       	rjmp	.+82     	; 0x5ca <vfprintf+0xf6>
 578:	89 2f       	mov	r24, r25
 57a:	80 53       	subi	r24, 0x30	; 48
 57c:	8a 30       	cpi	r24, 0x0A	; 10
 57e:	70 f4       	brcc	.+28     	; 0x59c <vfprintf+0xc8>
 580:	f6 fe       	sbrs	r15, 6
 582:	05 c0       	rjmp	.+10     	; 0x58e <vfprintf+0xba>
 584:	98 9c       	mul	r9, r8
 586:	90 2c       	mov	r9, r0
 588:	11 24       	eor	r1, r1
 58a:	98 0e       	add	r9, r24
 58c:	15 c0       	rjmp	.+42     	; 0x5b8 <vfprintf+0xe4>
 58e:	e8 9c       	mul	r14, r8
 590:	e0 2c       	mov	r14, r0
 592:	11 24       	eor	r1, r1
 594:	e8 0e       	add	r14, r24
 596:	f0 e2       	ldi	r31, 0x20	; 32
 598:	ff 2a       	or	r15, r31
 59a:	0e c0       	rjmp	.+28     	; 0x5b8 <vfprintf+0xe4>
 59c:	9e 32       	cpi	r25, 0x2E	; 46
 59e:	29 f4       	brne	.+10     	; 0x5aa <vfprintf+0xd6>
 5a0:	f6 fc       	sbrc	r15, 6
 5a2:	5f c1       	rjmp	.+702    	; 0x862 <vfprintf+0x38e>
 5a4:	40 e4       	ldi	r20, 0x40	; 64
 5a6:	f4 2a       	or	r15, r20
 5a8:	07 c0       	rjmp	.+14     	; 0x5b8 <vfprintf+0xe4>
 5aa:	9c 36       	cpi	r25, 0x6C	; 108
 5ac:	19 f4       	brne	.+6      	; 0x5b4 <vfprintf+0xe0>
 5ae:	50 e8       	ldi	r21, 0x80	; 128
 5b0:	f5 2a       	or	r15, r21
 5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <vfprintf+0xe4>
 5b4:	98 36       	cpi	r25, 0x68	; 104
 5b6:	49 f4       	brne	.+18     	; 0x5ca <vfprintf+0xf6>
 5b8:	f2 01       	movw	r30, r4
 5ba:	23 fd       	sbrc	r18, 3
 5bc:	95 91       	lpm	r25, Z+
 5be:	23 ff       	sbrs	r18, 3
 5c0:	91 91       	ld	r25, Z+
 5c2:	2f 01       	movw	r4, r30
 5c4:	99 23       	and	r25, r25
 5c6:	09 f0       	breq	.+2      	; 0x5ca <vfprintf+0xf6>
 5c8:	b8 cf       	rjmp	.-144    	; 0x53a <vfprintf+0x66>
 5ca:	89 2f       	mov	r24, r25
 5cc:	85 54       	subi	r24, 0x45	; 69
 5ce:	83 30       	cpi	r24, 0x03	; 3
 5d0:	18 f0       	brcs	.+6      	; 0x5d8 <vfprintf+0x104>
 5d2:	80 52       	subi	r24, 0x20	; 32
 5d4:	83 30       	cpi	r24, 0x03	; 3
 5d6:	38 f4       	brcc	.+14     	; 0x5e6 <vfprintf+0x112>
 5d8:	44 e0       	ldi	r20, 0x04	; 4
 5da:	50 e0       	ldi	r21, 0x00	; 0
 5dc:	a4 0e       	add	r10, r20
 5de:	b5 1e       	adc	r11, r21
 5e0:	5f e3       	ldi	r21, 0x3F	; 63
 5e2:	59 83       	std	Y+1, r21	; 0x01
 5e4:	0f c0       	rjmp	.+30     	; 0x604 <vfprintf+0x130>
 5e6:	93 36       	cpi	r25, 0x63	; 99
 5e8:	31 f0       	breq	.+12     	; 0x5f6 <vfprintf+0x122>
 5ea:	93 37       	cpi	r25, 0x73	; 115
 5ec:	79 f0       	breq	.+30     	; 0x60c <vfprintf+0x138>
 5ee:	93 35       	cpi	r25, 0x53	; 83
 5f0:	09 f0       	breq	.+2      	; 0x5f4 <vfprintf+0x120>
 5f2:	52 c0       	rjmp	.+164    	; 0x698 <vfprintf+0x1c4>
 5f4:	1f c0       	rjmp	.+62     	; 0x634 <vfprintf+0x160>
 5f6:	f5 01       	movw	r30, r10
 5f8:	80 81       	ld	r24, Z
 5fa:	89 83       	std	Y+1, r24	; 0x01
 5fc:	42 e0       	ldi	r20, 0x02	; 2
 5fe:	50 e0       	ldi	r21, 0x00	; 0
 600:	a4 0e       	add	r10, r20
 602:	b5 1e       	adc	r11, r21
 604:	61 01       	movw	r12, r2
 606:	01 e0       	ldi	r16, 0x01	; 1
 608:	10 e0       	ldi	r17, 0x00	; 0
 60a:	11 c0       	rjmp	.+34     	; 0x62e <vfprintf+0x15a>
 60c:	f5 01       	movw	r30, r10
 60e:	c0 80       	ld	r12, Z
 610:	d1 80       	ldd	r13, Z+1	; 0x01
 612:	f6 fc       	sbrc	r15, 6
 614:	03 c0       	rjmp	.+6      	; 0x61c <vfprintf+0x148>
 616:	6f ef       	ldi	r22, 0xFF	; 255
 618:	7f ef       	ldi	r23, 0xFF	; 255
 61a:	02 c0       	rjmp	.+4      	; 0x620 <vfprintf+0x14c>
 61c:	69 2d       	mov	r22, r9
 61e:	70 e0       	ldi	r23, 0x00	; 0
 620:	42 e0       	ldi	r20, 0x02	; 2
 622:	50 e0       	ldi	r21, 0x00	; 0
 624:	a4 0e       	add	r10, r20
 626:	b5 1e       	adc	r11, r21
 628:	c6 01       	movw	r24, r12
 62a:	2d d1       	rcall	.+602    	; 0x886 <strnlen>
 62c:	8c 01       	movw	r16, r24
 62e:	5f e7       	ldi	r21, 0x7F	; 127
 630:	f5 22       	and	r15, r21
 632:	13 c0       	rjmp	.+38     	; 0x65a <vfprintf+0x186>
 634:	f5 01       	movw	r30, r10
 636:	c0 80       	ld	r12, Z
 638:	d1 80       	ldd	r13, Z+1	; 0x01
 63a:	f6 fc       	sbrc	r15, 6
 63c:	03 c0       	rjmp	.+6      	; 0x644 <vfprintf+0x170>
 63e:	6f ef       	ldi	r22, 0xFF	; 255
 640:	7f ef       	ldi	r23, 0xFF	; 255
 642:	02 c0       	rjmp	.+4      	; 0x648 <vfprintf+0x174>
 644:	69 2d       	mov	r22, r9
 646:	70 e0       	ldi	r23, 0x00	; 0
 648:	42 e0       	ldi	r20, 0x02	; 2
 64a:	50 e0       	ldi	r21, 0x00	; 0
 64c:	a4 0e       	add	r10, r20
 64e:	b5 1e       	adc	r11, r21
 650:	c6 01       	movw	r24, r12
 652:	0e d1       	rcall	.+540    	; 0x870 <strnlen_P>
 654:	8c 01       	movw	r16, r24
 656:	50 e8       	ldi	r21, 0x80	; 128
 658:	f5 2a       	or	r15, r21
 65a:	f3 fe       	sbrs	r15, 3
 65c:	06 c0       	rjmp	.+12     	; 0x66a <vfprintf+0x196>
 65e:	18 c0       	rjmp	.+48     	; 0x690 <vfprintf+0x1bc>
 660:	80 e2       	ldi	r24, 0x20	; 32
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	b3 01       	movw	r22, r6
 666:	1a d1       	rcall	.+564    	; 0x89c <fputc>
 668:	ea 94       	dec	r14
 66a:	8e 2d       	mov	r24, r14
 66c:	90 e0       	ldi	r25, 0x00	; 0
 66e:	08 17       	cp	r16, r24
 670:	19 07       	cpc	r17, r25
 672:	b0 f3       	brcs	.-20     	; 0x660 <vfprintf+0x18c>
 674:	0d c0       	rjmp	.+26     	; 0x690 <vfprintf+0x1bc>
 676:	f6 01       	movw	r30, r12
 678:	f7 fc       	sbrc	r15, 7
 67a:	85 91       	lpm	r24, Z+
 67c:	f7 fe       	sbrs	r15, 7
 67e:	81 91       	ld	r24, Z+
 680:	6f 01       	movw	r12, r30
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	b3 01       	movw	r22, r6
 686:	0a d1       	rcall	.+532    	; 0x89c <fputc>
 688:	e1 10       	cpse	r14, r1
 68a:	ea 94       	dec	r14
 68c:	01 50       	subi	r16, 0x01	; 1
 68e:	10 40       	sbci	r17, 0x00	; 0
 690:	01 15       	cp	r16, r1
 692:	11 05       	cpc	r17, r1
 694:	81 f7       	brne	.-32     	; 0x676 <vfprintf+0x1a2>
 696:	e2 c0       	rjmp	.+452    	; 0x85c <vfprintf+0x388>
 698:	94 36       	cpi	r25, 0x64	; 100
 69a:	11 f0       	breq	.+4      	; 0x6a0 <vfprintf+0x1cc>
 69c:	99 36       	cpi	r25, 0x69	; 105
 69e:	61 f5       	brne	.+88     	; 0x6f8 <vfprintf+0x224>
 6a0:	f7 fe       	sbrs	r15, 7
 6a2:	08 c0       	rjmp	.+16     	; 0x6b4 <vfprintf+0x1e0>
 6a4:	f5 01       	movw	r30, r10
 6a6:	20 81       	ld	r18, Z
 6a8:	31 81       	ldd	r19, Z+1	; 0x01
 6aa:	42 81       	ldd	r20, Z+2	; 0x02
 6ac:	53 81       	ldd	r21, Z+3	; 0x03
 6ae:	84 e0       	ldi	r24, 0x04	; 4
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	0a c0       	rjmp	.+20     	; 0x6c8 <vfprintf+0x1f4>
 6b4:	f5 01       	movw	r30, r10
 6b6:	80 81       	ld	r24, Z
 6b8:	91 81       	ldd	r25, Z+1	; 0x01
 6ba:	9c 01       	movw	r18, r24
 6bc:	44 27       	eor	r20, r20
 6be:	37 fd       	sbrc	r19, 7
 6c0:	40 95       	com	r20
 6c2:	54 2f       	mov	r21, r20
 6c4:	82 e0       	ldi	r24, 0x02	; 2
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	a8 0e       	add	r10, r24
 6ca:	b9 1e       	adc	r11, r25
 6cc:	9f e6       	ldi	r25, 0x6F	; 111
 6ce:	f9 22       	and	r15, r25
 6d0:	57 ff       	sbrs	r21, 7
 6d2:	09 c0       	rjmp	.+18     	; 0x6e6 <vfprintf+0x212>
 6d4:	50 95       	com	r21
 6d6:	40 95       	com	r20
 6d8:	30 95       	com	r19
 6da:	21 95       	neg	r18
 6dc:	3f 4f       	sbci	r19, 0xFF	; 255
 6de:	4f 4f       	sbci	r20, 0xFF	; 255
 6e0:	5f 4f       	sbci	r21, 0xFF	; 255
 6e2:	e0 e8       	ldi	r30, 0x80	; 128
 6e4:	fe 2a       	or	r15, r30
 6e6:	ca 01       	movw	r24, r20
 6e8:	b9 01       	movw	r22, r18
 6ea:	a1 01       	movw	r20, r2
 6ec:	2a e0       	ldi	r18, 0x0A	; 10
 6ee:	30 e0       	ldi	r19, 0x00	; 0
 6f0:	01 d1       	rcall	.+514    	; 0x8f4 <__ultoa_invert>
 6f2:	d8 2e       	mov	r13, r24
 6f4:	d2 18       	sub	r13, r2
 6f6:	3f c0       	rjmp	.+126    	; 0x776 <vfprintf+0x2a2>
 6f8:	95 37       	cpi	r25, 0x75	; 117
 6fa:	29 f4       	brne	.+10     	; 0x706 <vfprintf+0x232>
 6fc:	1f 2d       	mov	r17, r15
 6fe:	1f 7e       	andi	r17, 0xEF	; 239
 700:	2a e0       	ldi	r18, 0x0A	; 10
 702:	30 e0       	ldi	r19, 0x00	; 0
 704:	1d c0       	rjmp	.+58     	; 0x740 <vfprintf+0x26c>
 706:	1f 2d       	mov	r17, r15
 708:	19 7f       	andi	r17, 0xF9	; 249
 70a:	9f 36       	cpi	r25, 0x6F	; 111
 70c:	61 f0       	breq	.+24     	; 0x726 <vfprintf+0x252>
 70e:	90 37       	cpi	r25, 0x70	; 112
 710:	20 f4       	brcc	.+8      	; 0x71a <vfprintf+0x246>
 712:	98 35       	cpi	r25, 0x58	; 88
 714:	09 f0       	breq	.+2      	; 0x718 <vfprintf+0x244>
 716:	a5 c0       	rjmp	.+330    	; 0x862 <vfprintf+0x38e>
 718:	0f c0       	rjmp	.+30     	; 0x738 <vfprintf+0x264>
 71a:	90 37       	cpi	r25, 0x70	; 112
 71c:	39 f0       	breq	.+14     	; 0x72c <vfprintf+0x258>
 71e:	98 37       	cpi	r25, 0x78	; 120
 720:	09 f0       	breq	.+2      	; 0x724 <vfprintf+0x250>
 722:	9f c0       	rjmp	.+318    	; 0x862 <vfprintf+0x38e>
 724:	04 c0       	rjmp	.+8      	; 0x72e <vfprintf+0x25a>
 726:	28 e0       	ldi	r18, 0x08	; 8
 728:	30 e0       	ldi	r19, 0x00	; 0
 72a:	0a c0       	rjmp	.+20     	; 0x740 <vfprintf+0x26c>
 72c:	10 61       	ori	r17, 0x10	; 16
 72e:	14 fd       	sbrc	r17, 4
 730:	14 60       	ori	r17, 0x04	; 4
 732:	20 e1       	ldi	r18, 0x10	; 16
 734:	30 e0       	ldi	r19, 0x00	; 0
 736:	04 c0       	rjmp	.+8      	; 0x740 <vfprintf+0x26c>
 738:	14 fd       	sbrc	r17, 4
 73a:	16 60       	ori	r17, 0x06	; 6
 73c:	20 e1       	ldi	r18, 0x10	; 16
 73e:	32 e0       	ldi	r19, 0x02	; 2
 740:	17 ff       	sbrs	r17, 7
 742:	08 c0       	rjmp	.+16     	; 0x754 <vfprintf+0x280>
 744:	f5 01       	movw	r30, r10
 746:	60 81       	ld	r22, Z
 748:	71 81       	ldd	r23, Z+1	; 0x01
 74a:	82 81       	ldd	r24, Z+2	; 0x02
 74c:	93 81       	ldd	r25, Z+3	; 0x03
 74e:	44 e0       	ldi	r20, 0x04	; 4
 750:	50 e0       	ldi	r21, 0x00	; 0
 752:	08 c0       	rjmp	.+16     	; 0x764 <vfprintf+0x290>
 754:	f5 01       	movw	r30, r10
 756:	80 81       	ld	r24, Z
 758:	91 81       	ldd	r25, Z+1	; 0x01
 75a:	bc 01       	movw	r22, r24
 75c:	80 e0       	ldi	r24, 0x00	; 0
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	42 e0       	ldi	r20, 0x02	; 2
 762:	50 e0       	ldi	r21, 0x00	; 0
 764:	a4 0e       	add	r10, r20
 766:	b5 1e       	adc	r11, r21
 768:	a1 01       	movw	r20, r2
 76a:	c4 d0       	rcall	.+392    	; 0x8f4 <__ultoa_invert>
 76c:	d8 2e       	mov	r13, r24
 76e:	d2 18       	sub	r13, r2
 770:	8f e7       	ldi	r24, 0x7F	; 127
 772:	f8 2e       	mov	r15, r24
 774:	f1 22       	and	r15, r17
 776:	f6 fe       	sbrs	r15, 6
 778:	0b c0       	rjmp	.+22     	; 0x790 <vfprintf+0x2bc>
 77a:	5e ef       	ldi	r21, 0xFE	; 254
 77c:	f5 22       	and	r15, r21
 77e:	d9 14       	cp	r13, r9
 780:	38 f4       	brcc	.+14     	; 0x790 <vfprintf+0x2bc>
 782:	f4 fe       	sbrs	r15, 4
 784:	07 c0       	rjmp	.+14     	; 0x794 <vfprintf+0x2c0>
 786:	f2 fc       	sbrc	r15, 2
 788:	05 c0       	rjmp	.+10     	; 0x794 <vfprintf+0x2c0>
 78a:	8f ee       	ldi	r24, 0xEF	; 239
 78c:	f8 22       	and	r15, r24
 78e:	02 c0       	rjmp	.+4      	; 0x794 <vfprintf+0x2c0>
 790:	1d 2d       	mov	r17, r13
 792:	01 c0       	rjmp	.+2      	; 0x796 <vfprintf+0x2c2>
 794:	19 2d       	mov	r17, r9
 796:	f4 fe       	sbrs	r15, 4
 798:	0d c0       	rjmp	.+26     	; 0x7b4 <vfprintf+0x2e0>
 79a:	fe 01       	movw	r30, r28
 79c:	ed 0d       	add	r30, r13
 79e:	f1 1d       	adc	r31, r1
 7a0:	80 81       	ld	r24, Z
 7a2:	80 33       	cpi	r24, 0x30	; 48
 7a4:	19 f4       	brne	.+6      	; 0x7ac <vfprintf+0x2d8>
 7a6:	99 ee       	ldi	r25, 0xE9	; 233
 7a8:	f9 22       	and	r15, r25
 7aa:	08 c0       	rjmp	.+16     	; 0x7bc <vfprintf+0x2e8>
 7ac:	1f 5f       	subi	r17, 0xFF	; 255
 7ae:	f2 fe       	sbrs	r15, 2
 7b0:	05 c0       	rjmp	.+10     	; 0x7bc <vfprintf+0x2e8>
 7b2:	03 c0       	rjmp	.+6      	; 0x7ba <vfprintf+0x2e6>
 7b4:	8f 2d       	mov	r24, r15
 7b6:	86 78       	andi	r24, 0x86	; 134
 7b8:	09 f0       	breq	.+2      	; 0x7bc <vfprintf+0x2e8>
 7ba:	1f 5f       	subi	r17, 0xFF	; 255
 7bc:	0f 2d       	mov	r16, r15
 7be:	f3 fc       	sbrc	r15, 3
 7c0:	13 c0       	rjmp	.+38     	; 0x7e8 <vfprintf+0x314>
 7c2:	f0 fe       	sbrs	r15, 0
 7c4:	0e c0       	rjmp	.+28     	; 0x7e2 <vfprintf+0x30e>
 7c6:	1e 15       	cp	r17, r14
 7c8:	10 f0       	brcs	.+4      	; 0x7ce <vfprintf+0x2fa>
 7ca:	9d 2c       	mov	r9, r13
 7cc:	0a c0       	rjmp	.+20     	; 0x7e2 <vfprintf+0x30e>
 7ce:	9d 2c       	mov	r9, r13
 7d0:	9e 0c       	add	r9, r14
 7d2:	91 1a       	sub	r9, r17
 7d4:	1e 2d       	mov	r17, r14
 7d6:	05 c0       	rjmp	.+10     	; 0x7e2 <vfprintf+0x30e>
 7d8:	80 e2       	ldi	r24, 0x20	; 32
 7da:	90 e0       	ldi	r25, 0x00	; 0
 7dc:	b3 01       	movw	r22, r6
 7de:	5e d0       	rcall	.+188    	; 0x89c <fputc>
 7e0:	1f 5f       	subi	r17, 0xFF	; 255
 7e2:	1e 15       	cp	r17, r14
 7e4:	c8 f3       	brcs	.-14     	; 0x7d8 <vfprintf+0x304>
 7e6:	04 c0       	rjmp	.+8      	; 0x7f0 <vfprintf+0x31c>
 7e8:	1e 15       	cp	r17, r14
 7ea:	10 f4       	brcc	.+4      	; 0x7f0 <vfprintf+0x31c>
 7ec:	e1 1a       	sub	r14, r17
 7ee:	01 c0       	rjmp	.+2      	; 0x7f2 <vfprintf+0x31e>
 7f0:	ee 24       	eor	r14, r14
 7f2:	04 ff       	sbrs	r16, 4
 7f4:	0e c0       	rjmp	.+28     	; 0x812 <vfprintf+0x33e>
 7f6:	80 e3       	ldi	r24, 0x30	; 48
 7f8:	90 e0       	ldi	r25, 0x00	; 0
 7fa:	b3 01       	movw	r22, r6
 7fc:	4f d0       	rcall	.+158    	; 0x89c <fputc>
 7fe:	02 ff       	sbrs	r16, 2
 800:	1b c0       	rjmp	.+54     	; 0x838 <vfprintf+0x364>
 802:	01 fd       	sbrc	r16, 1
 804:	03 c0       	rjmp	.+6      	; 0x80c <vfprintf+0x338>
 806:	88 e7       	ldi	r24, 0x78	; 120
 808:	90 e0       	ldi	r25, 0x00	; 0
 80a:	0e c0       	rjmp	.+28     	; 0x828 <vfprintf+0x354>
 80c:	88 e5       	ldi	r24, 0x58	; 88
 80e:	90 e0       	ldi	r25, 0x00	; 0
 810:	0b c0       	rjmp	.+22     	; 0x828 <vfprintf+0x354>
 812:	80 2f       	mov	r24, r16
 814:	86 78       	andi	r24, 0x86	; 134
 816:	81 f0       	breq	.+32     	; 0x838 <vfprintf+0x364>
 818:	01 ff       	sbrs	r16, 1
 81a:	02 c0       	rjmp	.+4      	; 0x820 <vfprintf+0x34c>
 81c:	8b e2       	ldi	r24, 0x2B	; 43
 81e:	01 c0       	rjmp	.+2      	; 0x822 <vfprintf+0x34e>
 820:	80 e2       	ldi	r24, 0x20	; 32
 822:	f7 fc       	sbrc	r15, 7
 824:	8d e2       	ldi	r24, 0x2D	; 45
 826:	90 e0       	ldi	r25, 0x00	; 0
 828:	b3 01       	movw	r22, r6
 82a:	38 d0       	rcall	.+112    	; 0x89c <fputc>
 82c:	05 c0       	rjmp	.+10     	; 0x838 <vfprintf+0x364>
 82e:	80 e3       	ldi	r24, 0x30	; 48
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	b3 01       	movw	r22, r6
 834:	33 d0       	rcall	.+102    	; 0x89c <fputc>
 836:	9a 94       	dec	r9
 838:	d9 14       	cp	r13, r9
 83a:	c8 f3       	brcs	.-14     	; 0x82e <vfprintf+0x35a>
 83c:	da 94       	dec	r13
 83e:	f1 01       	movw	r30, r2
 840:	ed 0d       	add	r30, r13
 842:	f1 1d       	adc	r31, r1
 844:	80 81       	ld	r24, Z
 846:	90 e0       	ldi	r25, 0x00	; 0
 848:	b3 01       	movw	r22, r6
 84a:	28 d0       	rcall	.+80     	; 0x89c <fputc>
 84c:	dd 20       	and	r13, r13
 84e:	b1 f7       	brne	.-20     	; 0x83c <vfprintf+0x368>
 850:	05 c0       	rjmp	.+10     	; 0x85c <vfprintf+0x388>
 852:	80 e2       	ldi	r24, 0x20	; 32
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	b3 01       	movw	r22, r6
 858:	21 d0       	rcall	.+66     	; 0x89c <fputc>
 85a:	ea 94       	dec	r14
 85c:	ee 20       	and	r14, r14
 85e:	c9 f7       	brne	.-14     	; 0x852 <vfprintf+0x37e>
 860:	50 ce       	rjmp	.-864    	; 0x502 <vfprintf+0x2e>
 862:	f3 01       	movw	r30, r6
 864:	66 81       	ldd	r22, Z+6	; 0x06
 866:	77 81       	ldd	r23, Z+7	; 0x07
 868:	cb 01       	movw	r24, r22
 86a:	2b 96       	adiw	r28, 0x0b	; 11
 86c:	e2 e1       	ldi	r30, 0x12	; 18
 86e:	bc c0       	rjmp	.+376    	; 0x9e8 <__epilogue_restores__>

00000870 <strnlen_P>:
 870:	fc 01       	movw	r30, r24
 872:	05 90       	lpm	r0, Z+
 874:	61 50       	subi	r22, 0x01	; 1
 876:	70 40       	sbci	r23, 0x00	; 0
 878:	01 10       	cpse	r0, r1
 87a:	d8 f7       	brcc	.-10     	; 0x872 <strnlen_P+0x2>
 87c:	80 95       	com	r24
 87e:	90 95       	com	r25
 880:	8e 0f       	add	r24, r30
 882:	9f 1f       	adc	r25, r31
 884:	08 95       	ret

00000886 <strnlen>:
 886:	fc 01       	movw	r30, r24
 888:	61 50       	subi	r22, 0x01	; 1
 88a:	70 40       	sbci	r23, 0x00	; 0
 88c:	01 90       	ld	r0, Z+
 88e:	01 10       	cpse	r0, r1
 890:	d8 f7       	brcc	.-10     	; 0x888 <strnlen+0x2>
 892:	80 95       	com	r24
 894:	90 95       	com	r25
 896:	8e 0f       	add	r24, r30
 898:	9f 1f       	adc	r25, r31
 89a:	08 95       	ret

0000089c <fputc>:
 89c:	0f 93       	push	r16
 89e:	1f 93       	push	r17
 8a0:	cf 93       	push	r28
 8a2:	df 93       	push	r29
 8a4:	8c 01       	movw	r16, r24
 8a6:	eb 01       	movw	r28, r22
 8a8:	8b 81       	ldd	r24, Y+3	; 0x03
 8aa:	81 ff       	sbrs	r24, 1
 8ac:	1b c0       	rjmp	.+54     	; 0x8e4 <fputc+0x48>
 8ae:	82 ff       	sbrs	r24, 2
 8b0:	0d c0       	rjmp	.+26     	; 0x8cc <fputc+0x30>
 8b2:	2e 81       	ldd	r18, Y+6	; 0x06
 8b4:	3f 81       	ldd	r19, Y+7	; 0x07
 8b6:	8c 81       	ldd	r24, Y+4	; 0x04
 8b8:	9d 81       	ldd	r25, Y+5	; 0x05
 8ba:	28 17       	cp	r18, r24
 8bc:	39 07       	cpc	r19, r25
 8be:	64 f4       	brge	.+24     	; 0x8d8 <fputc+0x3c>
 8c0:	e8 81       	ld	r30, Y
 8c2:	f9 81       	ldd	r31, Y+1	; 0x01
 8c4:	01 93       	st	Z+, r16
 8c6:	f9 83       	std	Y+1, r31	; 0x01
 8c8:	e8 83       	st	Y, r30
 8ca:	06 c0       	rjmp	.+12     	; 0x8d8 <fputc+0x3c>
 8cc:	e8 85       	ldd	r30, Y+8	; 0x08
 8ce:	f9 85       	ldd	r31, Y+9	; 0x09
 8d0:	80 2f       	mov	r24, r16
 8d2:	09 95       	icall
 8d4:	89 2b       	or	r24, r25
 8d6:	31 f4       	brne	.+12     	; 0x8e4 <fputc+0x48>
 8d8:	8e 81       	ldd	r24, Y+6	; 0x06
 8da:	9f 81       	ldd	r25, Y+7	; 0x07
 8dc:	01 96       	adiw	r24, 0x01	; 1
 8de:	9f 83       	std	Y+7, r25	; 0x07
 8e0:	8e 83       	std	Y+6, r24	; 0x06
 8e2:	02 c0       	rjmp	.+4      	; 0x8e8 <fputc+0x4c>
 8e4:	0f ef       	ldi	r16, 0xFF	; 255
 8e6:	1f ef       	ldi	r17, 0xFF	; 255
 8e8:	c8 01       	movw	r24, r16
 8ea:	df 91       	pop	r29
 8ec:	cf 91       	pop	r28
 8ee:	1f 91       	pop	r17
 8f0:	0f 91       	pop	r16
 8f2:	08 95       	ret

000008f4 <__ultoa_invert>:
 8f4:	fa 01       	movw	r30, r20
 8f6:	aa 27       	eor	r26, r26
 8f8:	28 30       	cpi	r18, 0x08	; 8
 8fa:	51 f1       	breq	.+84     	; 0x950 <__ultoa_invert+0x5c>
 8fc:	20 31       	cpi	r18, 0x10	; 16
 8fe:	81 f1       	breq	.+96     	; 0x960 <__ultoa_invert+0x6c>
 900:	e8 94       	clt
 902:	6f 93       	push	r22
 904:	6e 7f       	andi	r22, 0xFE	; 254
 906:	6e 5f       	subi	r22, 0xFE	; 254
 908:	7f 4f       	sbci	r23, 0xFF	; 255
 90a:	8f 4f       	sbci	r24, 0xFF	; 255
 90c:	9f 4f       	sbci	r25, 0xFF	; 255
 90e:	af 4f       	sbci	r26, 0xFF	; 255
 910:	b1 e0       	ldi	r27, 0x01	; 1
 912:	3e d0       	rcall	.+124    	; 0x990 <__ultoa_invert+0x9c>
 914:	b4 e0       	ldi	r27, 0x04	; 4
 916:	3c d0       	rcall	.+120    	; 0x990 <__ultoa_invert+0x9c>
 918:	67 0f       	add	r22, r23
 91a:	78 1f       	adc	r23, r24
 91c:	89 1f       	adc	r24, r25
 91e:	9a 1f       	adc	r25, r26
 920:	a1 1d       	adc	r26, r1
 922:	68 0f       	add	r22, r24
 924:	79 1f       	adc	r23, r25
 926:	8a 1f       	adc	r24, r26
 928:	91 1d       	adc	r25, r1
 92a:	a1 1d       	adc	r26, r1
 92c:	6a 0f       	add	r22, r26
 92e:	71 1d       	adc	r23, r1
 930:	81 1d       	adc	r24, r1
 932:	91 1d       	adc	r25, r1
 934:	a1 1d       	adc	r26, r1
 936:	20 d0       	rcall	.+64     	; 0x978 <__ultoa_invert+0x84>
 938:	09 f4       	brne	.+2      	; 0x93c <__ultoa_invert+0x48>
 93a:	68 94       	set
 93c:	3f 91       	pop	r19
 93e:	2a e0       	ldi	r18, 0x0A	; 10
 940:	26 9f       	mul	r18, r22
 942:	11 24       	eor	r1, r1
 944:	30 19       	sub	r19, r0
 946:	30 5d       	subi	r19, 0xD0	; 208
 948:	31 93       	st	Z+, r19
 94a:	de f6       	brtc	.-74     	; 0x902 <__ultoa_invert+0xe>
 94c:	cf 01       	movw	r24, r30
 94e:	08 95       	ret
 950:	46 2f       	mov	r20, r22
 952:	47 70       	andi	r20, 0x07	; 7
 954:	40 5d       	subi	r20, 0xD0	; 208
 956:	41 93       	st	Z+, r20
 958:	b3 e0       	ldi	r27, 0x03	; 3
 95a:	0f d0       	rcall	.+30     	; 0x97a <__ultoa_invert+0x86>
 95c:	c9 f7       	brne	.-14     	; 0x950 <__ultoa_invert+0x5c>
 95e:	f6 cf       	rjmp	.-20     	; 0x94c <__ultoa_invert+0x58>
 960:	46 2f       	mov	r20, r22
 962:	4f 70       	andi	r20, 0x0F	; 15
 964:	40 5d       	subi	r20, 0xD0	; 208
 966:	4a 33       	cpi	r20, 0x3A	; 58
 968:	18 f0       	brcs	.+6      	; 0x970 <__ultoa_invert+0x7c>
 96a:	49 5d       	subi	r20, 0xD9	; 217
 96c:	31 fd       	sbrc	r19, 1
 96e:	40 52       	subi	r20, 0x20	; 32
 970:	41 93       	st	Z+, r20
 972:	02 d0       	rcall	.+4      	; 0x978 <__ultoa_invert+0x84>
 974:	a9 f7       	brne	.-22     	; 0x960 <__ultoa_invert+0x6c>
 976:	ea cf       	rjmp	.-44     	; 0x94c <__ultoa_invert+0x58>
 978:	b4 e0       	ldi	r27, 0x04	; 4
 97a:	a6 95       	lsr	r26
 97c:	97 95       	ror	r25
 97e:	87 95       	ror	r24
 980:	77 95       	ror	r23
 982:	67 95       	ror	r22
 984:	ba 95       	dec	r27
 986:	c9 f7       	brne	.-14     	; 0x97a <__ultoa_invert+0x86>
 988:	00 97       	sbiw	r24, 0x00	; 0
 98a:	61 05       	cpc	r22, r1
 98c:	71 05       	cpc	r23, r1
 98e:	08 95       	ret
 990:	9b 01       	movw	r18, r22
 992:	ac 01       	movw	r20, r24
 994:	0a 2e       	mov	r0, r26
 996:	06 94       	lsr	r0
 998:	57 95       	ror	r21
 99a:	47 95       	ror	r20
 99c:	37 95       	ror	r19
 99e:	27 95       	ror	r18
 9a0:	ba 95       	dec	r27
 9a2:	c9 f7       	brne	.-14     	; 0x996 <__ultoa_invert+0xa2>
 9a4:	62 0f       	add	r22, r18
 9a6:	73 1f       	adc	r23, r19
 9a8:	84 1f       	adc	r24, r20
 9aa:	95 1f       	adc	r25, r21
 9ac:	a0 1d       	adc	r26, r0
 9ae:	08 95       	ret

000009b0 <__prologue_saves__>:
 9b0:	2f 92       	push	r2
 9b2:	3f 92       	push	r3
 9b4:	4f 92       	push	r4
 9b6:	5f 92       	push	r5
 9b8:	6f 92       	push	r6
 9ba:	7f 92       	push	r7
 9bc:	8f 92       	push	r8
 9be:	9f 92       	push	r9
 9c0:	af 92       	push	r10
 9c2:	bf 92       	push	r11
 9c4:	cf 92       	push	r12
 9c6:	df 92       	push	r13
 9c8:	ef 92       	push	r14
 9ca:	ff 92       	push	r15
 9cc:	0f 93       	push	r16
 9ce:	1f 93       	push	r17
 9d0:	cf 93       	push	r28
 9d2:	df 93       	push	r29
 9d4:	cd b7       	in	r28, 0x3d	; 61
 9d6:	de b7       	in	r29, 0x3e	; 62
 9d8:	ca 1b       	sub	r28, r26
 9da:	db 0b       	sbc	r29, r27
 9dc:	0f b6       	in	r0, 0x3f	; 63
 9de:	f8 94       	cli
 9e0:	de bf       	out	0x3e, r29	; 62
 9e2:	0f be       	out	0x3f, r0	; 63
 9e4:	cd bf       	out	0x3d, r28	; 61
 9e6:	09 94       	ijmp

000009e8 <__epilogue_restores__>:
 9e8:	2a 88       	ldd	r2, Y+18	; 0x12
 9ea:	39 88       	ldd	r3, Y+17	; 0x11
 9ec:	48 88       	ldd	r4, Y+16	; 0x10
 9ee:	5f 84       	ldd	r5, Y+15	; 0x0f
 9f0:	6e 84       	ldd	r6, Y+14	; 0x0e
 9f2:	7d 84       	ldd	r7, Y+13	; 0x0d
 9f4:	8c 84       	ldd	r8, Y+12	; 0x0c
 9f6:	9b 84       	ldd	r9, Y+11	; 0x0b
 9f8:	aa 84       	ldd	r10, Y+10	; 0x0a
 9fa:	b9 84       	ldd	r11, Y+9	; 0x09
 9fc:	c8 84       	ldd	r12, Y+8	; 0x08
 9fe:	df 80       	ldd	r13, Y+7	; 0x07
 a00:	ee 80       	ldd	r14, Y+6	; 0x06
 a02:	fd 80       	ldd	r15, Y+5	; 0x05
 a04:	0c 81       	ldd	r16, Y+4	; 0x04
 a06:	1b 81       	ldd	r17, Y+3	; 0x03
 a08:	aa 81       	ldd	r26, Y+2	; 0x02
 a0a:	b9 81       	ldd	r27, Y+1	; 0x01
 a0c:	ce 0f       	add	r28, r30
 a0e:	d1 1d       	adc	r29, r1
 a10:	0f b6       	in	r0, 0x3f	; 63
 a12:	f8 94       	cli
 a14:	de bf       	out	0x3e, r29	; 62
 a16:	0f be       	out	0x3f, r0	; 63
 a18:	cd bf       	out	0x3d, r28	; 61
 a1a:	ed 01       	movw	r28, r26
 a1c:	08 95       	ret

00000a1e <_exit>:
 a1e:	f8 94       	cli

00000a20 <__stop_program>:
 a20:	ff cf       	rjmp	.-2      	; 0xa20 <__stop_program>
